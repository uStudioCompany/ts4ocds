{"version":3,"sources":["webpack:////Users/dmytrocat/Projects/ts4ocds/node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./src/api/validator/kind.validator.ts","webpack:///./src/templates/Reflection/components/Type/conditional.component.tsx","webpack:///./src/templates/Reflection/components/Type/indexed-access.component.tsx","webpack:///./src/templates/Reflection/module.context.ts","webpack:///./src/templates/Reflection/components/Type/reference.component.tsx","webpack:///./src/templates/Reflection/components/Type/reflection.component.tsx","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/bytesToUuid.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js","webpack:///./src/templates/Reflection/components/Type/union.component.tsx","webpack:///./src/api/validator/type.validator.ts","webpack:///./src/templates/Reflection/components/Type/type.module.tsx","webpack:///./src/templates/Reflection/components/Property/property.styles.tsx","webpack:///./src/templates/Reflection/components/Property/property.component.tsx","webpack:///./src/templates/Reflection/reflection.styles.tsx","webpack:///./src/templates/Reflection/reflection.component.tsx"],"names":["init","data","byteOffset","length","this","isInterface","entity","kindString","Conditional","conditional","direction","checkType","name","renderType","extendsType","trueType","falseType","IndexedAccess","indexedAccess","objectType","indexType","ModuleContext","createContext","Reference","reference","references","useReflections","modules","useModules","module","useContext","id","to","createUrl","key","renderLink","renderVariable","index","array","flags","type","Fragment","isOptional","Reflection","reflection","children","declaration","map","indexSignature","parameter","parameters","renderIndexSignature","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","toString","substr","buf","offset","i","bth","join","options","Array","rnds","random","ii","Union","separator","union","types","filter","isIntrinsic","mapUnion","node","v4","renderNode","StringLiteral","styled","Text","variant","value","elementType","Property","Flex","Mixin","Style","borderAll","color","Name","attrs","appearance","Description","ReactMarkdown","renderers","paragraph","strong","link","props","target","rel","Type","alignment","vertical","isWrap","Font","codeRegular","Screen","xs","css","Meta","withDisplayNames","description","isInterfaceProp","horizontal","background","source","PropertyList","ul","renderProperty","property","isReflectionInterface","comment","shortText","ReflectionTemplate","pageContext","isMd","useMediaQuery","Helmet","Layout","Provider","Boolean","typeParameter","tp","sort","a","b","mapProperties","undefined"],"mappings":"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","file":"component---src-templates-reflection-reflection-component-tsx-024a3a41a15b0faa3841.js","sourcesContent":["require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","import type { Entity, InterfaceReflection } from '../typings';\n\nexport const isInterface = (entity: Entity): entity is InterfaceReflection => entity.kindString === 'Interface';\n\nexport const hasTypeParameter = (entity: Entity): boolean => Boolean(entity?.typeParameter);\n","import React from 'react';\nimport Flex from 'ustudio-ui/components/Flex';\n\nimport { Conditional as ConditionalType } from '../../../../api/typings';\nimport { renderType } from './type.module';\n\nconst Conditional: React.FC<ConditionalType> = (conditional) => {\n  return (\n    <Flex direction=\"column\">\n      <Flex>\n        {conditional.checkType.name} extends {renderType(conditional.extendsType)}\n      </Flex>\n      <Flex>?&#32;{renderType(conditional.trueType)} </Flex>\n      <Flex>:&#32;{renderType(conditional.falseType)}</Flex>\n    </Flex>\n  );\n};\n\nexport default Conditional;\n","import React from 'react';\nimport { IndexedAccess as IndexedAccessType } from '../../../../api/typings';\nimport { renderType } from './type.module';\n\nconst IndexedAccess: React.FC<IndexedAccessType> = (indexedAccess) => {\n  return (\n    <>\n      {renderType(indexedAccess.objectType)}[{renderType(indexedAccess.indexType)}]\n    </>\n  );\n};\n\nexport default IndexedAccess;\n","import { createContext, useContext } from 'react';\n\nconst ModuleContext = createContext({} as { module: string });\n\nexport const useModule = (): string => useContext(ModuleContext).module;\n\nexport default ModuleContext;\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport { ModulesMap, Reference as ReferenceType, ReflectionsMap } from '../../../../api/typings';\nimport { useModules, useReflections } from '../../../../context/api.context';\nimport { createUrl } from '../../../../utils';\nimport { useModule } from '../../module.context';\n\nconst renderLink = ({\n  reference,\n  references,\n  modules,\n  module,\n}: {\n  reference: ReferenceType;\n  references: ReflectionsMap;\n  modules: ModulesMap;\n  module: string;\n}): ReactNode => {\n  /**\n   * This is done due to a bug when where there should be a pointer to a reference\n   * there is a pointer to a module with the same name.\n   */\n  if (!references[reference.id]) {\n    if (modules[reference.id]) {\n      return (\n        <Link to={createUrl(modules[reference.id].name, reference.name)} key={reference.name}>\n          {reference.name}\n        </Link>\n      );\n    }\n    /**\n     * Where in conditional type reference id is not specified\n     */\n    if (!reference.id) {\n      return (\n        <Link to={createUrl(module, reference.name)} key={reference.name}>\n          {reference.name}\n        </Link>\n      );\n    }\n    /**\n     * This is an edge case of the reference pointing to the type parameter that cannot be validated here\n     */\n    return `<${reference.name}>`;\n  }\n\n  return (\n    <Link to={createUrl(references[reference.id].module, reference.name)} key={reference.name}>\n      {reference.name}\n    </Link>\n  );\n};\n\nconst Reference: React.FC<ReferenceType> = (reference) => {\n  const references = useReflections();\n  const modules = useModules();\n  const module = useModule();\n\n  return <>{renderLink({ reference, references, modules, module })}</>;\n};\n\nexport default Reference;\n","import React, { ReactNode } from 'react';\nimport { IndexSignatureType, ObjectType, VariableReflection } from '../../../../api/typings';\nimport { renderType } from './type.module';\n\nconst renderIndexSignature = (reflection: IndexSignatureType) => {\n  const indexSignature = reflection.declaration.indexSignature?.[0];\n\n  if (!indexSignature) {\n    return '';\n  }\n\n  const parameter = indexSignature.parameters[0];\n\n  return (\n    <>\n      [{parameter.name}: {renderType(parameter.type)}]: {renderType(indexSignature.type)}\n    </>\n  );\n};\n\nconst renderVariable = ({ name, flags, type }: VariableReflection, index: number, array: VariableReflection[]) => {\n  return (\n    <React.Fragment key={name}>\n      {name}\n      {flags?.isOptional ? '?' : ''}:&#32;{renderType(type)}\n      {index < array.length - 1 && <>, </>}\n    </React.Fragment>\n  );\n};\n\nconst mapVariables = (children?: VariableReflection[]): ReactNode => {\n  if (children) {\n    return <>{children.map(renderVariable)}&#32;</>;\n  }\n\n  return '';\n};\n\nconst Reflection: React.FC<IndexSignatureType | ObjectType> = (reflection) => {\n  return (\n    <>\n      {`{ `}\n      {(reflection as ObjectType).declaration?.children\n        ? mapVariables((reflection as ObjectType).declaration?.children as VariableReflection[] | undefined)\n        : renderIndexSignature(reflection as IndexSignatureType)}\n      {` }`}\n    </>\n  );\n};\n\nexport default Reflection;\n","import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.function.bind\";\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import React, { ReactNode } from 'react';\nimport { v4 } from 'uuid';\nimport { IntersectionType, UnionType } from '../../../../api/typings';\nimport { isIntrinsic } from '../../../../api/validator';\nimport { renderType } from './type.module';\n\nconst mapUnion = (union: UnionType | IntersectionType): ReactNode[] => {\n  return union.types.filter((type) => !(isIntrinsic(type) && type.name === 'undefined')).map(renderType);\n};\n\nconst renderNode = (separator: '|' | '&') => (node: ReactNode, index: number, array: ReactNode[]) => {\n  return (\n    <React.Fragment key={v4()}>\n      {node}\n      {index < array.length - 1 && <>{` ${separator} `}</>}\n    </React.Fragment>\n  );\n};\n\nconst Union: React.FC<(UnionType | IntersectionType) & { separator?: '|' | '&' }> = ({ separator = '|', ...union }) => {\n  return <>{mapUnion(union).map(renderNode(separator))}</>;\n};\n\nexport default Union;\n","import type { Intrinsic, Type } from '../typings';\n\nexport const isIntrinsic = (type: Type): type is Intrinsic => type.type === 'intrinsic';\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport Text from 'ustudio-ui/components/Text';\n\nimport { Type } from '../../../../api/typings';\n\nimport Conditional from './conditional.component';\nimport IndexedAccess from './indexed-access.component';\nimport Reference from './reference.component';\nimport Reflection from './reflection.component';\nimport Union from './union.component';\n\nconst StringLiteral = styled(Text)`\n  color: var(--c-positive);\n`;\n\nexport const renderType = (type: Type): ReactNode => {\n  switch (type.type) {\n    case 'typeParameter': {\n      return `<${type.name}>`;\n    }\n    case 'intrinsic': {\n      return type.name;\n    }\n    case 'stringLiteral': {\n      return <StringLiteral variant=\"code\">{`'${type.value}'`}</StringLiteral>;\n    }\n    case 'union': {\n      return <Union {...type} />;\n    }\n    case 'intersection': {\n      return <Union {...type} separator=\"&\" />;\n    }\n    case 'reference': {\n      return <Reference {...type} />;\n    }\n    case 'array': {\n      return (\n        <>\n          {renderType(type.elementType)}\n          []\n        </>\n      );\n    }\n    case 'reflection': {\n      return <Reflection {...type} />;\n    }\n    case 'conditional': {\n      return <Conditional {...type} />;\n    }\n    case 'indexedAccess': {\n      return <IndexedAccess {...type} />;\n    }\n    default: {\n      return '';\n    }\n  }\n};\n","import React, { ReactElement } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styled, { css } from 'styled-components';\n\nimport Flex from 'ustudio-ui/components/Flex';\nimport Text from 'ustudio-ui/components/Text';\n\nimport { Mixin } from 'ustudio-ui/theme';\nimport { withDisplayNames } from '../../../../utils';\n\nconst Property = styled(Flex)`\n  padding: var(--i-regular);\n\n  ${Mixin.Style.borderAll({ color: 'var(--c-light)' })};\n  background-color: var(--c-lightest);\n  border-radius: var(--border-radius);\n`;\n\nconst Name = styled(Text).attrs(() => ({\n  appearance: 'bold',\n}))`\n  margin-right: var(--i-medium);\n`;\n\nconst Description = styled(ReactMarkdown).attrs(() => ({\n  renderers: {\n    paragraph: ({ children }): ReactElement => <Text variant=\"small\">{children}</Text>,\n    strong: ({ children }): ReactElement => <Text variant=\"small\">{children}</Text>,\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    link: (props) => <a {...props} target=\"_blank\" rel=\"noreferrer noopener\" />,\n  },\n}))`\n  color: var(--c-dark);\n\n  margin-top: var(--i-small);\n`;\n\nconst Type = styled(Flex).attrs(() => ({\n  alignment: {\n    vertical: 'center',\n  },\n  isWrap: true\n}))`\n  ${Mixin.Font.codeRegular()};\n  white-space: pre-wrap;\n\n  color: var(--c-primary-light);\n\n  margin-top: var(--i-small);\n\n  ${Mixin.Screen.xs(css`\n    margin-left: var(--i-small);\n    margin-top: 0;\n  `)}\n`;\n\nconst Meta = styled(Flex)`\n  flex-wrap: wrap;\n\n  ${Mixin.Screen.xs(css`\n    flex-wrap: nowrap;\n  `)}\n`;\n\nexport default withDisplayNames({ Property, Name, Description, Type, Meta });\n","import React from 'react';\nimport Flex from 'ustudio-ui/components/Flex';\nimport Tag from 'ustudio-ui/components/Tag';\n\nimport { Type } from '../../../../api/typings';\nimport Styled from './property.styles';\n\nimport { renderType } from '../Type';\n\ninterface PropertyProps {\n  name: string;\n  description?: string;\n  type: Type;\n  isOptional?: boolean;\n  isInterfaceProp?: boolean;\n}\n\nconst Property: React.FC<PropertyProps> = ({ name, description, type, isOptional, isInterfaceProp }) => {\n  return (\n    <Styled.Property direction=\"column\">\n      <Flex alignment={{ horizontal: 'space-between', vertical: 'start' }}>\n        <Styled.Meta>\n          <Styled.Name>{`${name}:`}</Styled.Name>\n\n          <Styled.Type>{renderType(type)}</Styled.Type>\n        </Styled.Meta>\n\n        {!isOptional && isInterfaceProp && (\n          <Tag appearance={{ background: 'var(--c-negative-light)', color: 'var(--c-lightest)' }}>required</Tag>\n        )}\n      </Flex>\n\n      {description && <Styled.Description source={description} />}\n    </Styled.Property>\n  );\n};\n\nexport default Property;\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport styled from 'styled-components';\nimport { withDisplayNames } from '../../utils';\n\nconst PropertyList = styled.ul`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 1rem;\n\n  margin-top: var(--i-large);\n`;\n\nconst Description = styled(ReactMarkdown).attrs(() => ({\n  renderers: {\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    link: (props) => <a {...props} target=\"_blank\" rel=\"noreferrer noopener\" />,\n  },\n}))`\n  color: var(--c-dark);\n`;\n\nexport default withDisplayNames({ PropertyList, Description });\n","import React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Flex from 'ustudio-ui/components/Flex';\nimport useMediaQuery from 'ustudio-ui/hooks/use-media-query';\n\nimport { hasTypeParameter, isInterface } from '../../api/validator';\nimport { Reflection, Property as PropertyType, TypeAliasReflection, InterfaceReflection } from '../../api/typings';\n\nimport Layout from '../../components/Layout';\nimport { Property } from './components';\nimport ModuleContext from './module.context';\n\nimport Styled from './reflection.styles';\n\nconst renderProperty = (property: TypeAliasReflection | PropertyType, isReflectionInterface?: boolean): ReactNode => {\n  return (\n    <Property\n      name={property.name}\n      description={property.comment?.shortText}\n      type={property.type}\n      isOptional={(property as PropertyType).flags?.isOptional}\n      isInterfaceProp={isReflectionInterface}\n    />\n  );\n};\n\nconst mapProperties = (reflection: InterfaceReflection): ReactNode[] => {\n  return reflection.children\n    .sort((a, b) => (a > b ? -1 : 1))\n    .sort((a, b) => {\n      if (a.flags?.isOptional) return 1;\n\n      if (b.flags?.isOptional) return -1;\n\n      return 0;\n    })\n    .map((property) => <li key={property.name}>{renderProperty(property, isInterface(reflection))}</li>);\n};\n\nconst ReflectionTemplate: React.FC<{ pageContext: Reflection }> = ({ pageContext: reflection }) => {\n  const isMd = useMediaQuery('screen and (min-width: 768px)');\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${reflection.module} - ${reflection.name}`}</title>\n      </Helmet>\n\n      <Layout>\n        <Flex direction=\"column\">\n          {isMd ? <h1>{reflection.name}</h1> : <h4>{reflection.name}</h4>}\n\n          {reflection?.comment && <Styled.Description source={reflection.comment.shortText} />}\n\n          <ModuleContext.Provider value={{ module: reflection.module }}>\n            {hasTypeParameter(reflection) && (\n              <Styled.PropertyList>\n                {reflection.typeParameter?.map((tp) => (\n                  <Property name={`<${tp.name}>`} description=\"Type parameter\" type={tp.type} key={tp.id} />\n                ))}\n              </Styled.PropertyList>\n            )}\n\n            <Styled.PropertyList>\n              {isInterface(reflection)\n                ? mapProperties(reflection)\n                : renderProperty({\n                    ...reflection,\n                    comment: undefined,\n                  })}\n            </Styled.PropertyList>\n          </ModuleContext.Provider>\n        </Flex>\n      </Layout>\n    </>\n  );\n};\n\nexport default ReflectionTemplate;\n"],"sourceRoot":""}