{"version":3,"sources":["webpack:///./src/components/templates/Module/style.ts","webpack:///./src/components/templates/Module/index.tsx"],"names":["ModulesList","styled","ul","Module","Flex","attrs","direction","alignment","horizontal","Mixin","Style","borderAll","color","CategoryName","h2","ReflectionsList","Grid","xs","template","Reflection","Link","withDisplayNames","module","pageContext","interfaces","children","filter","reflection","kindString","typeAliases","Helmet","name","Layout","length","Boolean","map","interfaceReflection","key","id","to","createUrl","typeAliasReflection"],"mappings":"6MAMMA,EAAcC,UAAOC,GAAV,qEAAGD,CAAH,0FAQXE,EAASF,kBAAOG,QAAMC,OAAM,iBAAO,CACvCC,UAAW,SACXC,UAAW,CAAEC,WAAY,cAFf,gEAAGP,CAAH,4EAORQ,QAAMC,MAAMC,UAAU,CAAEC,MAAO,oBAI7BC,EAAeZ,UAAOa,GAAV,sEAAGb,CAAH,mCAIZc,EAAkBd,kBAAOe,QAAMX,OAAM,iBAAO,CAChDY,GAAI,CACFC,SAAU,4CAFO,yEAAGjB,CAAH,MAMfkB,EAAalB,kBAAOmB,QAAV,oEAAGnB,CAAH,0cA6CDoB,cAAiB,CAAErB,cAAaG,SAAQU,eAAcE,kBAAiBI,e,YCfvEhB,UAzDuC,SAAC,GAA4B,IAAbmB,EAAa,EAA1BC,YACjDC,EAAaF,EAAOG,SAASC,QAAO,SAACC,GAAD,MAA0C,cAA1BA,EAAWC,cAC/DC,EAAcP,EAAOG,SAASC,QAAO,SAACC,GAAD,MAA0C,eAA1BA,EAAWC,cAEtE,OACE,oCACE,kBAACE,EAAA,OAAD,KACE,+BAAQR,EAAOS,OAGjB,kBAACC,EAAA,EAAD,KACE,4BAAKV,EAAOS,OAEVP,EAAWS,QAAUJ,EAAYI,SACjC,kBAAC,EAAOjC,YAAR,KACGkC,QAAQV,EAAWS,SAClB,kBAAC,EAAO9B,OAAR,KACE,kBAAC,EAAOU,aAAR,mBAEA,kBAAC,EAAOE,gBAAR,KACGS,EAAWW,KAAI,SAACC,GAAD,OACd,kBAAC,OAAD,CAAMC,IAAKD,EAAoBE,IAC7B,kBAAC,OAAD,CAAM/B,UAAW,CAAEC,WAAY,WAC7B,kBAAC,EAAOW,WAAR,CAAmBoB,GAAIC,YAAUlB,EAAOS,KAAMK,EAAoBL,OAC/DK,EAAoBL,aASlCG,QAAQL,EAAYI,SACnB,kBAAC,EAAO9B,OAAR,KACE,kBAAC,EAAOU,aAAR,qBAEA,kBAAC,EAAOE,gBAAR,KACGc,EAAYM,KAAI,SAACM,GAAD,OACf,kBAAC,OAAD,CAAMJ,IAAKI,EAAoBH,IAC7B,kBAAC,OAAD,CAAM/B,UAAW,CAAEC,WAAY,WAC7B,kBAAC,EAAOW,WAAR,CAAmBoB,GAAIC,YAAUlB,EAAOS,KAAMU,EAAoBV,OAC/DU,EAAoBV","file":"component---src-components-templates-module-index-tsx-46a8249933378fba0384.js","sourcesContent":["import { Link } from 'gatsby';\nimport styled, { css } from 'styled-components';\nimport { Flex, Grid } from 'ustudio-ui';\nimport { Mixin } from 'ustudio-ui/theme';\nimport { withDisplayNames } from '../../../utils';\n\nconst ModulesList = styled.ul`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: var(--i-large);\n\n  margin-top: var(--i-regular);\n`;\n\nconst Module = styled(Flex).attrs(() => ({\n  direction: 'column',\n  alignment: { horizontal: 'center' },\n}))`\n  flex: 1;\n  padding: var(--i-regular);\n\n  ${Mixin.Style.borderAll({ color: 'var(--c-light)' })};\n  border-radius: var(--border-radius);\n`;\n\nconst CategoryName = styled.h2`\n  margin-bottom: var(--i-large);\n`;\n\nconst ReflectionsList = styled(Grid).attrs(() => ({\n  xs: {\n    template: 'repeat(auto-fit, minmax(300px, 1fr))',\n  },\n}))``;\n\nconst Reflection = styled(Link)`\n  position: relative;\n  overflow: hidden;\n\n  padding: var(--i-regular) var(--i-large);\n  color: var(--c-primary);\n  border-radius: var(--border-radius);\n\n  transition: var(--transition);\n\n  &:hover {\n    &:before {\n      background-color: var(--c-primary);\n    }\n  }\n\n  &:active {\n    &:before {\n      background-color: var(--c-primary-light);\n    }\n  }\n\n  &:focus {\n    box-shadow: var(--neumo-shadow);\n  }\n\n  &:before {\n    content: '';\n    opacity: 0.1;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    transition: var(--transition);\n  }\n\n  &:after {\n    display: none;\n  }\n`;\n\nexport default withDisplayNames({ ModulesList, Module, CategoryName, ReflectionsList, Reflection });\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Cell, Flex } from 'ustudio-ui';\nimport { InterfaceReflection, Module as ModuleType, TypeAliasReflection } from '../../../api/typings';\nimport { createUrl } from '../../../utils';\nimport Styled from './style';\nimport Layout from '../../Layout';\n\nconst Module: React.FC<{ pageContext: ModuleType }> = ({ pageContext: module }) => {\n  const interfaces = module.children.filter((reflection) => reflection.kindString === 'Interface');\n  const typeAliases = module.children.filter((reflection) => reflection.kindString === 'Type alias');\n\n  return (\n    <>\n      <Helmet>\n        <title>{module.name}</title>\n      </Helmet>\n\n      <Layout>\n        <h1>{module.name}</h1>\n\n        {(interfaces.length || typeAliases.length) && (\n          <Styled.ModulesList>\n            {Boolean(interfaces.length) && (\n              <Styled.Module>\n                <Styled.CategoryName>Interfaces</Styled.CategoryName>\n\n                <Styled.ReflectionsList>\n                  {interfaces.map((interfaceReflection: InterfaceReflection) => (\n                    <Cell key={interfaceReflection.id}>\n                      <Flex alignment={{ horizontal: 'center' }}>\n                        <Styled.Reflection to={createUrl(module.name, interfaceReflection.name)}>\n                          {interfaceReflection.name}\n                        </Styled.Reflection>\n                      </Flex>\n                    </Cell>\n                  ))}\n                </Styled.ReflectionsList>\n              </Styled.Module>\n            )}\n\n            {Boolean(typeAliases.length) && (\n              <Styled.Module>\n                <Styled.CategoryName>Type aliases</Styled.CategoryName>\n\n                <Styled.ReflectionsList>\n                  {typeAliases.map((typeAliasReflection: TypeAliasReflection) => (\n                    <Cell key={typeAliasReflection.id}>\n                      <Flex alignment={{ horizontal: 'center' }}>\n                        <Styled.Reflection to={createUrl(module.name, typeAliasReflection.name)}>\n                          {typeAliasReflection.name}\n                        </Styled.Reflection>\n                      </Flex>\n                    </Cell>\n                  ))}\n                </Styled.ReflectionsList>\n              </Styled.Module>\n            )}\n          </Styled.ModulesList>\n        )}\n      </Layout>\n    </>\n  );\n};\n\nexport default Module;\n"],"sourceRoot":""}