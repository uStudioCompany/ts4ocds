{
	"id": 0,
	"name": "TS4OCDS",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 101,
			"name": "Award",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/award.d.ts",
			"children": [
				{
					"id": 102,
					"name": "Award",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An award for the given procurement.\nThere can be more than one award per contracting process e.g. because the contract is split among different providers,\nor because it is a standing offer."
					},
					"children": [
						{
							"id": 113,
							"name": "amendments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An award amendment is a formal change to the details of the award,\nand generally involves the publication of a new award notice/release.\nThe rationale and a description of the changes made can be provided here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 94,
									"name": "Amendment"
								}
							}
						},
						{
							"id": 111,
							"name": "contractPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The period for which the contract has been awarded."
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "Period"
							}
						},
						{
							"id": 107,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of the contract award.\nThis is usually the date on which a decision to award was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 105,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award description"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 112,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All documents and attachments related to the award, including any notices."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							}
						},
						{
							"id": 103,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this award.\nIt must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 110,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The goods and services awarded in this award, broken into line items wherever possible.\nItems should not be duplicated, but the quantity specified instead."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 79,
									"name": "Item"
								}
							}
						},
						{
							"id": 106,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current status of the award,\nfrom the closed [awardStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 114,
								"name": "AwardStatus"
							}
						},
						{
							"id": 109,
							"name": "suppliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The suppliers awarded this award.\nIf different suppliers have been awarded different items or values, these should be split into separate award blocks."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 48,
									"name": "OrganizationReference"
								}
							}
						},
						{
							"id": 104,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 108,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The total value of this award.\nIn the case of a framework contract this may be the total estimated lifetime value, or maximum value, of the agreement.\nThere may be more than one award per procurement. A negative value indicates that the award may involve payments\nfrom the supplier to the buyer (commonly used in concession contracts)."
							},
							"type": {
								"type": "reference",
								"id": 9,
								"name": "Value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								113,
								111,
								107,
								105,
								112,
								103,
								110,
								106,
								109,
								104,
								108
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 227,
							"name": "Award"
						},
						{
							"type": "reference",
							"id": 353,
							"name": "Award"
						},
						{
							"type": "reference",
							"id": 422,
							"name": "Award"
						}
					]
				},
				{
					"id": 114,
					"name": "AwardStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "pending"
							},
							{
								"type": "stringLiteral",
								"value": "active"
							},
							{
								"type": "stringLiteral",
								"value": "cancelled"
							},
							{
								"type": "stringLiteral",
								"value": "unsuccessful"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						102
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						114
					]
				}
			]
		},
		{
			"id": 136,
			"name": "Contract",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/contract/contract.d.ts",
			"children": [
				{
					"id": 148,
					"name": "Implementation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Information during the performance / implementation stage of the contract."
					},
					"children": [
						{
							"id": 151,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Documents and reports that are part of the implementation phase e.g. audit and evaluation reports."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							}
						},
						{
							"id": 150,
							"name": "milestones",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "As milestones are completed, the milestone's status and dates should be updated."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 124,
									"name": "Milestone"
								}
							}
						},
						{
							"id": 149,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of the spending transactions made against this contract"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 139,
									"name": "Transaction"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								151,
								150,
								149
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 241,
							"name": "Implementation"
						}
					]
				},
				{
					"id": 139,
					"name": "Transaction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A spending transaction related to the contracting process.\nDraws upon the data models of the [Fiscal Data Package](https://frictionlessdata.io/specs/fiscal-data-package/)\nand the [International Aid Transparency Initiative](http://iatistandard.org/activity-standard/iati-activities/iati-activity/transaction/)\nand should be used to cross-reference to more detailed information held using a Fiscal Data Package, IATI file,\nor to provide enough information to allow a user to manually or automatically cross-reference with some other\npublished source of transactional spending data."
					},
					"children": [
						{
							"id": 142,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of the transaction"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 140,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A unique identifier for this transaction.\nThis identifier should be possible to cross-reference against the provided data source. For IATI this is the transaction reference."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 145,
							"name": "payee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An organization reference for the organization which receives the funds in this transaction."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							}
						},
						{
							"id": 144,
							"name": "payer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An organization reference for the organization from which the funds in this transaction originate."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							}
						},
						{
							"id": 141,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to point either to a corresponding Fiscal Data Package, IATI file,\nor machine or human-readable source where users can find further information on the budget line item identifiers,\nor project identifiers, provided here."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 146,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A URI pointing directly to a machine-readable record about this spending transaction."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 143,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The value of the transaction."
							},
							"type": {
								"type": "reference",
								"id": 10,
								"name": "Value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								142,
								140,
								145,
								144,
								141,
								146,
								143
							]
						}
					]
				},
				{
					"id": 137,
					"name": "ContractStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current status of the contract,\nfrom the closed [contractStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#contract-status) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "pending"
							},
							{
								"type": "stringLiteral",
								"value": "active"
							},
							{
								"type": "stringLiteral",
								"value": "cancelled"
							},
							{
								"type": "stringLiteral",
								"value": "terminated"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						148,
						139
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						137
					]
				}
			]
		},
		{
			"id": 161,
			"name": "Conversions",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/extensions/conversions/coefficient.d.ts",
			"children": [
				{
					"id": 171,
					"name": "BaseConversion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 175,
							"name": "coefficients",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of applicable coefficients for this conversion"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 162,
									"name": "Coefficient"
								}
							}
						},
						{
							"id": 174,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Free text description of this conversion could be shared here"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 172,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this conversion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 173,
							"name": "rationale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The free-text rationale of using of this conversion"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								175,
								174,
								172,
								173
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 176,
							"name": "RelatedConversion"
						},
						{
							"type": "reference",
							"id": 183,
							"name": "UnrelatedConversion"
						}
					]
				},
				{
					"id": 162,
					"name": "Coefficient",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A coefficient applied in case of the value of prescribed attribute matches"
					},
					"children": [
						{
							"id": 168,
							"name": "coefficient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Precise value that has to be applied for conversion in specific case"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 169,
							"name": "formula",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where mathematical formula is used to calculate precise value that has to be applied for conversion\nin specific case this field must be populated with such formula"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 163,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this coefficient."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 166,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicative maximum value of related 'requirement' or one of available 'options'\nif applicable received through 'requirementResponse'"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 165,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Indicative minimum value of related 'requirement' or one of available 'options'\nif applicable received through 'requirementResponse'"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 167,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Used to specify a particular period the conversion and its coefficients are applies to"
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "Period"
							}
						},
						{
							"id": 164,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value of related 'requirement' or one of available 'options' if applicable received through 'requirementResponse'"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								168,
								169,
								163,
								166,
								165,
								167,
								164
							]
						}
					]
				},
				{
					"id": 176,
					"name": "RelatedConversion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 182,
							"name": "coefficients",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of applicable coefficients for this conversion"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 162,
									"name": "Coefficient"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 175,
								"name": "BaseConversion.coefficients"
							}
						},
						{
							"id": 181,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Free text description of this conversion could be shared here"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 174,
								"name": "BaseConversion.description"
							}
						},
						{
							"id": 179,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this conversion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "BaseConversion.id"
							}
						},
						{
							"id": 180,
							"name": "rationale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The free-text rationale of using of this conversion"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 173,
								"name": "BaseConversion.rationale"
							}
						},
						{
							"id": 178,
							"name": "relatedItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where 'relatesTo' is not empty this field must be populated with the id of the item in this tender section\nwhich the conversion relates to."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 177,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The schema element that the conversion applies.\nFor example, the conversion may be defined against a requirement or against a metric."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "requirement"
									},
									{
										"type": "stringLiteral",
										"value": "observation"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								182,
								181,
								179,
								180,
								178,
								177
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 171,
							"name": "BaseConversion"
						}
					]
				},
				{
					"id": 183,
					"name": "UnrelatedConversion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 189,
							"name": "coefficients",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of applicable coefficients for this conversion"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 162,
									"name": "Coefficient"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 175,
								"name": "BaseConversion.coefficients"
							}
						},
						{
							"id": 188,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Free text description of this conversion could be shared here"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 174,
								"name": "BaseConversion.description"
							}
						},
						{
							"id": 186,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this conversion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 172,
								"name": "BaseConversion.id"
							}
						},
						{
							"id": 187,
							"name": "rationale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The free-text rationale of using of this conversion"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 173,
								"name": "BaseConversion.rationale"
							}
						},
						{
							"id": 185,
							"name": "relatedItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 184,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								189,
								188,
								186,
								187,
								185,
								184
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 171,
							"name": "BaseConversion"
						}
					]
				},
				{
					"id": 190,
					"name": "Conversion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Conversion is used to describe conversions and its coefficients applicable\nfor specific value received for requirement or observation"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 176,
								"name": "RelatedConversion"
							},
							{
								"type": "reference",
								"id": 183,
								"name": "UnrelatedConversion"
							}
						]
					}
				},
				{
					"id": 400,
					"name": "Observation",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MainObservation"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 401,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 402,
											"name": "options",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 259,
													"name": "Option"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												402
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 404,
					"name": "Requirement",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MainRequirement"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 405,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 406,
											"name": "options",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 259,
													"name": "Option"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												406
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						171,
						162,
						176,
						183
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						190,
						400,
						404
					]
				}
			]
		},
		{
			"id": 51,
			"name": "Document",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/document.d.ts",
			"children": [
				{
					"id": 52,
					"name": "Document",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Links to, or descriptions of, external documents can be attached at various locations within the standard.\nDocuments can be supporting information, formal notices, downloadable forms,\nor any other kind of resource that ought to be made public as part of full open contracting."
					},
					"children": [
						{
							"id": 59,
							"name": "dateModified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Date that the document was last modified"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 58,
							"name": "datePublished",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date on which the document was first published.\nThis is particularly important for legally important documents such as notices of a tender."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 56,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A short description of the document.\nDescriptions are recommended to not exceed 250 words.\nIn the event the document is not accessible online,\nthe description field can be used to describe arrangements for obtaining a copy of the document."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 54,
							"name": "documentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A classification of the document described,\nusing the open [documentType](https://standard.open-contracting.org/1.1/en/schema/codelists/#document-type) codelist."
							},
							"type": {
								"type": "reference",
								"id": 62,
								"name": "DocumentType"
							}
						},
						{
							"id": 60,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The format of the document, using the open [IANA Media Types](http://www.iana.org/assignments/media-types/) codelist\n(see the values in the 'Template' column), or using the 'offline/print' code if the described document is published offline.\nFor example, web pages have a format of 'text/html'."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 53,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local, unique identifier for this document.\nThis field is used to keep track of multiple revisions of a document through the compilation from release to record mechanism."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 61,
							"name": "language",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The language of the linked document using either two-letter [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes),\nor extended [BCP47 language tags](http://www.w3.org/International/articles/language-tags/).\nThe use of lowercase two-letter codes from [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\nis recommended unless there is a clear user need for distinguishing the language subtype."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 55,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The document title."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 57,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direct link to the document or attachment.\nThe server providing access to this document ought to be configured to correctly report the document mime type."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								59,
								58,
								56,
								54,
								60,
								53,
								61,
								55,
								57
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 436,
							"name": "Document"
						}
					]
				},
				{
					"id": 62,
					"name": "DocumentType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "plannedProcurementNotice"
							},
							{
								"type": "stringLiteral",
								"value": "tenderNotice"
							},
							{
								"type": "stringLiteral",
								"value": "awardNotice"
							},
							{
								"type": "stringLiteral",
								"value": "contractNotice"
							},
							{
								"type": "stringLiteral",
								"value": "completionCertificate"
							},
							{
								"type": "stringLiteral",
								"value": "procurementPlan"
							},
							{
								"type": "stringLiteral",
								"value": "biddingDocuments"
							},
							{
								"type": "stringLiteral",
								"value": "technicalSpecifications"
							},
							{
								"type": "stringLiteral",
								"value": "evaluationCriteria"
							},
							{
								"type": "stringLiteral",
								"value": "evaluationReports"
							},
							{
								"type": "stringLiteral",
								"value": "contractDraft"
							},
							{
								"type": "stringLiteral",
								"value": "contractSigned"
							},
							{
								"type": "stringLiteral",
								"value": "contractArrangements"
							},
							{
								"type": "stringLiteral",
								"value": "contractSchedule"
							},
							{
								"type": "stringLiteral",
								"value": "physicalProgressReport"
							},
							{
								"type": "stringLiteral",
								"value": "financialProgressReport"
							},
							{
								"type": "stringLiteral",
								"value": "finalAudit"
							},
							{
								"type": "stringLiteral",
								"value": "hearingNotice"
							},
							{
								"type": "stringLiteral",
								"value": "marketStudies"
							},
							{
								"type": "stringLiteral",
								"value": "eligibilityCriteria"
							},
							{
								"type": "stringLiteral",
								"value": "clarifications"
							},
							{
								"type": "stringLiteral",
								"value": "shortlistedFirms"
							},
							{
								"type": "stringLiteral",
								"value": "environmentalImpact"
							},
							{
								"type": "stringLiteral",
								"value": "assetAndLiabilityAssessment"
							},
							{
								"type": "stringLiteral",
								"value": "riskProvisions"
							},
							{
								"type": "stringLiteral",
								"value": "winningBid"
							},
							{
								"type": "stringLiteral",
								"value": "complaints"
							},
							{
								"type": "stringLiteral",
								"value": "contractAnnexe"
							},
							{
								"type": "stringLiteral",
								"value": "contractGuarantees"
							},
							{
								"type": "stringLiteral",
								"value": "subContract"
							},
							{
								"type": "stringLiteral",
								"value": "needsAssessment"
							},
							{
								"type": "stringLiteral",
								"value": "feasibilityStudy"
							},
							{
								"type": "stringLiteral",
								"value": "projectPlan"
							},
							{
								"type": "stringLiteral",
								"value": "billOfQuantity"
							},
							{
								"type": "stringLiteral",
								"value": "bidders"
							},
							{
								"type": "stringLiteral",
								"value": "conflictOfInterest"
							},
							{
								"type": "stringLiteral",
								"value": "debarments"
							},
							{
								"type": "stringLiteral",
								"value": "illustration"
							},
							{
								"type": "stringLiteral",
								"value": "submissionDocuments"
							},
							{
								"type": "stringLiteral",
								"value": "contractSummary"
							},
							{
								"type": "stringLiteral",
								"value": "cancellationDetails"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						52
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						62
					]
				}
			]
		},
		{
			"id": 63,
			"name": "Item",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/tender/item/classification.d.ts",
			"children": [
				{
					"id": 64,
					"name": "Classification",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A classification consists of at least two parts:\nan identifier for the list (scheme) from which the classification is taken,\nand an identifier for the category from that list being applied.\nIt is useful to also publish a text label and/or URI that users can draw on to interpret the classification."
					},
					"children": [
						{
							"id": 67,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A textual description or title for the classification code."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 66,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The classification code taken from the scheme."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 65,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The scheme or codelist from which the classification code is taken.\nFor line item classifications,\nthis uses the open [itemClassificationScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#item-classification-scheme) codelist."
							},
							"type": {
								"type": "reference",
								"id": 69,
								"name": "ItemClassificationScheme"
							}
						},
						{
							"id": 68,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A URI to uniquely identify the classification code."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								67,
								66,
								65,
								68
							]
						}
					]
				},
				{
					"id": 79,
					"name": "Item",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A good, service, or work to be contracted."
					},
					"children": [
						{
							"id": 83,
							"name": "additionalClassifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An array of additional classifications for the item."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 64,
									"name": "Classification"
								}
							}
						},
						{
							"id": 82,
							"name": "classification",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The primary classification for the item."
							},
							"type": {
								"type": "reference",
								"id": 64,
								"name": "Classification"
							}
						},
						{
							"id": 81,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the goods, services to be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 80,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier to reference and merge the items by.\nMust be unique within a given array of items."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 84,
							"name": "quantity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of units to be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 85,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the unit in which the supplies, services or works are provided (e.g. hours, kilograms) and the unit-price."
							},
							"type": {
								"type": "reference",
								"id": 71,
								"name": "Unit"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								83,
								82,
								81,
								80,
								84,
								85
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 448,
							"name": "Item"
						}
					]
				},
				{
					"id": 71,
					"name": "Unit",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 73,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The identifier from the codelist referenced in the scheme property.\nCheck the codelist for details of how to find and use identifiers from the scheme in use."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 74,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the unit."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 72,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The list from which identifiers for units of measure are taken,\nusing the open [unitClassificationScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#unit-classification-scheme) codelist.\n'UNCEFACT' is recommended."
							},
							"type": {
								"type": "reference",
								"id": 77,
								"name": "UnitClassificationScheme"
							}
						},
						{
							"id": 76,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The machine-readable URI for the unit of measure, provided by the scheme."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 75,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The monetary value of a single unit."
							},
							"type": {
								"type": "reference",
								"id": 9,
								"name": "Value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								73,
								74,
								72,
								76,
								75
							]
						}
					]
				},
				{
					"id": 69,
					"name": "ItemClassificationScheme",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "CPV"
							},
							{
								"type": "stringLiteral",
								"value": "CPVS"
							},
							{
								"type": "stringLiteral",
								"value": "GSIN"
							},
							{
								"type": "stringLiteral",
								"value": "UNSPSC"
							},
							{
								"type": "stringLiteral",
								"value": "CPC"
							},
							{
								"type": "stringLiteral",
								"value": "OKDP"
							},
							{
								"type": "stringLiteral",
								"value": "OKPD"
							},
							{
								"type": "stringLiteral",
								"value": "CUCOP"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 77,
					"name": "UnitClassificationScheme",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "UNCEFACT"
							},
							{
								"type": "stringLiteral",
								"value": "QUDT"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						64,
						79,
						71
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						69,
						77
					]
				}
			]
		},
		{
			"id": 407,
			"name": "Lots",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/extensions/lots/lot.d.ts",
			"children": [
				{
					"id": 422,
					"name": "Award",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 434,
							"name": "amendments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An award amendment is a formal change to the details of the award,\nand generally involves the publication of a new award notice/release.\nThe rationale and a description of the changes made can be provided here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 94,
									"name": "Amendment"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 113,
								"name": "Award.amendments"
							}
						},
						{
							"id": 432,
							"name": "contractPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The period for which the contract has been awarded."
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 111,
								"name": "Award.contractPeriod"
							}
						},
						{
							"id": 428,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of the contract award.\nThis is usually the date on which a decision to award was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Award.date"
							}
						},
						{
							"id": 426,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award description"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 105,
								"name": "Award.description"
							}
						},
						{
							"id": 433,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All documents and attachments related to the award, including any notices."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "Award.documents"
							}
						},
						{
							"id": 424,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this award.\nIt must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "Award.id"
							}
						},
						{
							"id": 431,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The goods and services awarded in this award, broken into line items wherever possible.\nItems should not be duplicated, but the quantity specified instead."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 79,
									"name": "Item"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 110,
								"name": "Award.items"
							}
						},
						{
							"id": 423,
							"name": "relatedLots",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "If this award relates to one or more specific lots, provide the identifier(s) of the related lot(s) here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "stringLiteral",
										"value": "id"
									},
									"objectType": {
										"type": "reference",
										"name": "Lot"
									}
								}
							}
						},
						{
							"id": 427,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current status of the award,\nfrom the closed [awardStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 114,
								"name": "AwardStatus"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "Award.status"
							}
						},
						{
							"id": 430,
							"name": "suppliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The suppliers awarded this award.\nIf different suppliers have been awarded different items or values, these should be split into separate award blocks."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 48,
									"name": "OrganizationReference"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 109,
								"name": "Award.suppliers"
							}
						},
						{
							"id": 425,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 104,
								"name": "Award.title"
							}
						},
						{
							"id": 429,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The total value of this award.\nIn the case of a framework contract this may be the total estimated lifetime value, or maximum value, of the agreement.\nThere may be more than one award per procurement. A negative value indicates that the award may involve payments\nfrom the supplier to the buyer (commonly used in concession contracts)."
							},
							"type": {
								"type": "reference",
								"id": 9,
								"name": "Value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 108,
								"name": "Award.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								434,
								432,
								428,
								426,
								433,
								424,
								431,
								423,
								427,
								430,
								425,
								429
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 102,
							"name": "Award"
						}
					]
				},
				{
					"id": 436,
					"name": "Document",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 444,
							"name": "dateModified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Date that the document was last modified"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 59,
								"name": "Document.dateModified"
							}
						},
						{
							"id": 443,
							"name": "datePublished",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date on which the document was first published.\nThis is particularly important for legally important documents such as notices of a tender."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 58,
								"name": "Document.datePublished"
							}
						},
						{
							"id": 441,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A short description of the document.\nDescriptions are recommended to not exceed 250 words.\nIn the event the document is not accessible online,\nthe description field can be used to describe arrangements for obtaining a copy of the document."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 56,
								"name": "Document.description"
							}
						},
						{
							"id": 439,
							"name": "documentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A classification of the document described,\nusing the open [documentType](https://standard.open-contracting.org/1.1/en/schema/codelists/#document-type) codelist."
							},
							"type": {
								"type": "reference",
								"id": 62,
								"name": "DocumentType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 54,
								"name": "Document.documentType"
							}
						},
						{
							"id": 445,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The format of the document, using the open [IANA Media Types](http://www.iana.org/assignments/media-types/) codelist\n(see the values in the 'Template' column), or using the 'offline/print' code if the described document is published offline.\nFor example, web pages have a format of 'text/html'."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Document.format"
							}
						},
						{
							"id": 438,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local, unique identifier for this document.\nThis field is used to keep track of multiple revisions of a document through the compilation from release to record mechanism."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 53,
								"name": "Document.id"
							}
						},
						{
							"id": 446,
							"name": "language",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The language of the linked document using either two-letter [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes),\nor extended [BCP47 language tags](http://www.w3.org/International/articles/language-tags/).\nThe use of lowercase two-letter codes from [ISO639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\nis recommended unless there is a clear user need for distinguishing the language subtype."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 61,
								"name": "Document.language"
							}
						},
						{
							"id": 437,
							"name": "relatedLots",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "If this document relates to a particular lot, provide the identifier(s) of the related lot(s) here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "stringLiteral",
										"value": "id"
									},
									"objectType": {
										"type": "reference",
										"name": "Lot"
									}
								}
							}
						},
						{
							"id": 440,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The document title."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 55,
								"name": "Document.title"
							}
						},
						{
							"id": 442,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A direct link to the document or attachment.\nThe server providing access to this document ought to be configured to correctly report the document mime type."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 57,
								"name": "Document.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								444,
								443,
								441,
								439,
								445,
								438,
								446,
								437,
								440,
								442
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 52,
							"name": "Document"
						}
					]
				},
				{
					"id": 448,
					"name": "Item",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 453,
							"name": "additionalClassifications",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An array of additional classifications for the item."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 64,
									"name": "Classification"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 83,
								"name": "Item.additionalClassifications"
							}
						},
						{
							"id": 452,
							"name": "classification",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The primary classification for the item."
							},
							"type": {
								"type": "reference",
								"id": 64,
								"name": "Classification"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 82,
								"name": "Item.classification"
							}
						},
						{
							"id": 451,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the goods, services to be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 81,
								"name": "Item.description"
							}
						},
						{
							"id": 450,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier to reference and merge the items by.\nMust be unique within a given array of items."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "Item.id"
							}
						},
						{
							"id": 454,
							"name": "quantity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The number of units to be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 84,
								"name": "Item.quantity"
							}
						},
						{
							"id": 449,
							"name": "relatedLot",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "If this item belongs to a lot, provide the identifier of the related lot here.\nEach item may only belong to a single lot."
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "stringLiteral",
									"value": "id"
								},
								"objectType": {
									"type": "reference",
									"name": "Lot"
								}
							}
						},
						{
							"id": 455,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the unit in which the supplies, services or works are provided (e.g. hours, kilograms) and the unit-price."
							},
							"type": {
								"type": "reference",
								"id": 71,
								"name": "Unit"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 85,
								"name": "Item.unit"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								453,
								452,
								451,
								450,
								454,
								449,
								455
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 79,
							"name": "Item"
						}
					]
				},
				{
					"id": 408,
					"name": "Lot",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A lot is a grouping of items within a tender that can be bid on or awarded together."
					},
					"children": [
						{
							"id": 411,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this lot."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 409,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this lot, such as a lot number.\nThis is used in relatedLots references at the item, document and award level."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 412,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current status of the process related to this lot\nbased on the [tenderStatus codelist](http://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status)"
							},
							"type": {
								"type": "reference",
								"id": 414,
								"name": "LotStatus"
							}
						},
						{
							"id": 410,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this lot."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 413,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The maximum estimated value of this lot."
							},
							"type": {
								"type": "reference",
								"id": 10,
								"name": "Value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								411,
								409,
								412,
								410,
								413
							]
						}
					]
				},
				{
					"id": 416,
					"name": "LotGroup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Where the buyer reserves the right to combine lots, or wishes to specify the total value for a group of lots,\na lot group is used to capture this information."
					},
					"children": [
						{
							"id": 417,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this group of lots."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "maximumValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The maximum estimated value of the lots in this group.\nThis may be lower than the sum total of lot values"
							},
							"type": {
								"type": "reference",
								"id": 10,
								"name": "Value"
							}
						},
						{
							"id": 419,
							"name": "optionsToCombine",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The buyer reserves the right to combine the lots in this group when awarding a contract."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 418,
							"name": "relatedLots",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of the identifiers of the lots that form this group.\nLots may appear in more than one group."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "stringLiteral",
										"value": "id"
									},
									"objectType": {
										"type": "reference",
										"name": "Lot"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								417,
								420,
								419,
								418
							]
						}
					]
				},
				{
					"id": 457,
					"name": "Milestone",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 463,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Milestone codes can be used to track specific events that take place for a particular kind of contracting process.\nFor example, a code of 'approvalLetter' can be used to allow applications to understand this milestone\nrepresents the date an approvalLetter is due or signed."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 129,
								"name": "Milestone.code"
							}
						},
						{
							"id": 465,
							"name": "dateMet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date on which the milestone was met."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 131,
								"name": "Milestone.dateMet"
							}
						},
						{
							"id": 466,
							"name": "dateModified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date the milestone was last reviewed or modified and the status was altered or confirmed to still be correct."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 132,
								"name": "Milestone.dateModified"
							}
						},
						{
							"id": 462,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the milestone."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 128,
								"name": "Milestone.description"
							}
						},
						{
							"id": 464,
							"name": "dueDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date the milestone is due."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 130,
								"name": "Milestone.dueDate"
							}
						},
						{
							"id": 459,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this milestone, unique within this block.\nThis field is used to keep track of multiple revisions of a milestone through the compilation from release to record mechanism."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 125,
								"name": "Milestone.id"
							}
						},
						{
							"id": 458,
							"name": "relatedLots",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "If this milestone relates to one or more specific lots, provide the identifier(s) of the related lot(s) here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "stringLiteral",
										"value": "id"
									},
									"objectType": {
										"type": "reference",
										"name": "Lot"
									}
								}
							}
						},
						{
							"id": 467,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The status that was realized on the date provided in `dateModified`,\nfrom the closed [milestoneStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#milestone-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 135,
								"name": "MilestoneStatus"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 133,
								"name": "Milestone.status"
							}
						},
						{
							"id": 460,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Milestone title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 126,
								"name": "Milestone.title"
							}
						},
						{
							"id": 461,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The nature of the milestone,\nusing the open [milestoneType](https://standard.open-contracting.org/1.1/en/schema/codelists/#milestone-type) codelist."
							},
							"type": {
								"type": "reference",
								"id": 134,
								"name": "MilestoneType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 127,
								"name": "Milestone.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								463,
								465,
								466,
								462,
								464,
								459,
								458,
								467,
								460,
								461
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 124,
							"name": "Milestone"
						}
					]
				},
				{
					"id": 414,
					"name": "LotStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"id": 87,
						"name": "TenderStatus"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						422,
						436,
						448,
						408,
						416,
						457
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						414
					]
				}
			]
		},
		{
			"id": 191,
			"name": "Metrics",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/extensions/metrics/milestone-reference.d.ts",
			"children": [
				{
					"id": 227,
					"name": "Award",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 228,
							"name": "agreedMetrics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Any target metrics set out as part of the contract award."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 221,
									"name": "Metric"
								}
							}
						},
						{
							"id": 239,
							"name": "amendments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An award amendment is a formal change to the details of the award,\nand generally involves the publication of a new award notice/release.\nThe rationale and a description of the changes made can be provided here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 94,
									"name": "Amendment"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 113,
								"name": "Award.amendments"
							}
						},
						{
							"id": 237,
							"name": "contractPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The period for which the contract has been awarded."
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 111,
								"name": "Award.contractPeriod"
							}
						},
						{
							"id": 233,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of the contract award.\nThis is usually the date on which a decision to award was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Award.date"
							}
						},
						{
							"id": 231,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award description"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 105,
								"name": "Award.description"
							}
						},
						{
							"id": 238,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All documents and attachments related to the award, including any notices."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "Award.documents"
							}
						},
						{
							"id": 229,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this award.\nIt must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "Award.id"
							}
						},
						{
							"id": 236,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The goods and services awarded in this award, broken into line items wherever possible.\nItems should not be duplicated, but the quantity specified instead."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 79,
									"name": "Item"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 110,
								"name": "Award.items"
							}
						},
						{
							"id": 232,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current status of the award,\nfrom the closed [awardStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 114,
								"name": "AwardStatus"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "Award.status"
							}
						},
						{
							"id": 235,
							"name": "suppliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The suppliers awarded this award.\nIf different suppliers have been awarded different items or values, these should be split into separate award blocks."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 48,
									"name": "OrganizationReference"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 109,
								"name": "Award.suppliers"
							}
						},
						{
							"id": 230,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 104,
								"name": "Award.title"
							}
						},
						{
							"id": 234,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The total value of this award.\nIn the case of a framework contract this may be the total estimated lifetime value, or maximum value, of the agreement.\nThere may be more than one award per procurement. A negative value indicates that the award may involve payments\nfrom the supplier to the buyer (commonly used in concession contracts)."
							},
							"type": {
								"type": "reference",
								"id": 9,
								"name": "Value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 108,
								"name": "Award.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								228,
								239,
								237,
								233,
								231,
								238,
								229,
								236,
								232,
								235,
								230,
								234
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 102,
							"name": "Award"
						}
					]
				},
				{
					"id": 196,
					"name": "BaseObservation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 200,
							"name": "dimensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Any number of dimensions can be recorded within this object.\nDimensions names should follow the camelCase conventions of OCDS."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							}
						},
						{
							"id": 197,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this specific observation.\nThis may be an arbitrary identifier, or could be a composite of the metric identifier, and the date\nand other dimensions of this observation."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 201,
							"name": "notes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Any notes on this observation.\nThis may include clarifying information."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 198,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period over which this observation is measured."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							}
						},
						{
							"id": 202,
							"name": "relatedImplementationMilestone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A link to the milestone in the implementation section of OCDS to which this forecast,\ntarget or actual observation relates."
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "MilestoneReference"
							}
						},
						{
							"id": 199,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unit"
							},
							"type": {
								"type": "reference",
								"id": 71,
								"name": "Unit"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								200,
								197,
								201,
								198,
								202,
								199
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 203,
							"name": "FinancialObservation"
						},
						{
							"type": "reference",
							"id": 211,
							"name": "NonFinancialObservation"
						}
					]
				},
				{
					"id": 203,
					"name": "FinancialObservation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 208,
							"name": "dimensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Any number of dimensions can be recorded within this object.\nDimensions names should follow the camelCase conventions of OCDS."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 200,
								"name": "BaseObservation.dimensions"
							}
						},
						{
							"id": 205,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this specific observation.\nThis may be an arbitrary identifier, or could be a composite of the metric identifier, and the date\nand other dimensions of this observation."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 197,
								"name": "BaseObservation.id"
							}
						},
						{
							"id": 209,
							"name": "notes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Any notes on this observation.\nThis may include clarifying information."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 201,
								"name": "BaseObservation.notes"
							}
						},
						{
							"id": 206,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period over which this observation is measured."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 198,
								"name": "BaseObservation.period"
							}
						},
						{
							"id": 210,
							"name": "relatedImplementationMilestone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A link to the milestone in the implementation section of OCDS to which this forecast,\ntarget or actual observation relates."
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "MilestoneReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 202,
								"name": "BaseObservation.relatedImplementationMilestone"
							}
						},
						{
							"id": 207,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unit"
							},
							"type": {
								"type": "reference",
								"id": 71,
								"name": "Unit"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 199,
								"name": "BaseObservation.unit"
							}
						},
						{
							"id": 204,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "For financial metrics, the value of this forecast, target or actual observation."
							},
							"type": {
								"type": "reference",
								"id": 10,
								"name": "Value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								208,
								205,
								209,
								206,
								210,
								207,
								204
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 196,
							"name": "BaseObservation"
						}
					]
				},
				{
					"id": 241,
					"name": "Implementation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 245,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Documents and reports that are part of the implementation phase e.g. audit and evaluation reports."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 151,
								"name": "Implementation.documents"
							}
						},
						{
							"id": 242,
							"name": "metrics",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Reported results from the delivery of the contracted goods, works or services."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 221,
									"name": "Metric"
								}
							}
						},
						{
							"id": 244,
							"name": "milestones",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "As milestones are completed, the milestone's status and dates should be updated."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 124,
									"name": "Milestone"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 150,
								"name": "Implementation.milestones"
							}
						},
						{
							"id": 243,
							"name": "transactions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of the spending transactions made against this contract"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 139,
									"name": "Transaction"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 149,
								"name": "Implementation.transactions"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								245,
								242,
								244,
								243
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 148,
							"name": "Implementation"
						}
					]
				},
				{
					"id": 221,
					"name": "Metric",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Metrics are used to set out targets and results from a contracting process.\nDuring the planning and tender sections, a metric indicates the anticipated results.\nIn award and contract sections it indicates the awarded/contracted results.\nIn the implementation section it is used to provide updates on actually delivered results, also known as outputs."
					},
					"children": [
						{
							"id": 224,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A short description of the metric.\nThis may include short details of measurement methods."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 222,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this metric.\nIn some cases this may be drawn from a codelist of metrics required for this type of contracting process,\nor in other instances may be an arbitrary identifier."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 225,
							"name": "observations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An array of target or actual values for this metric."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 219,
									"name": "Observation"
								}
							}
						},
						{
							"id": 223,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of this metric"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								224,
								222,
								225,
								223
							]
						}
					]
				},
				{
					"id": 192,
					"name": "MilestoneReference",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A block used to reference a milestone, including the ID and title of the milestone being referenced."
					},
					"children": [
						{
							"id": 193,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The ID of the milestone being referenced,\nthis must match the ID of a milestone described elsewhere in a release about this contracting process."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 194,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of the milestone being referenced,\nthis must match the title of a milestone described elsewhere in a release about this contracting process."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								193,
								194
							]
						}
					]
				},
				{
					"id": 211,
					"name": "NonFinancialObservation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 216,
							"name": "dimensions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Any number of dimensions can be recorded within this object.\nDimensions names should follow the camelCase conventions of OCDS."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 200,
								"name": "BaseObservation.dimensions"
							}
						},
						{
							"id": 213,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this specific observation.\nThis may be an arbitrary identifier, or could be a composite of the metric identifier, and the date\nand other dimensions of this observation."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 197,
								"name": "BaseObservation.id"
							}
						},
						{
							"id": 212,
							"name": "measure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "For non-financial metrics, the measure of this forecast, target or actual observation.\nMeasures may be provided as free text or numerical values."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 217,
							"name": "notes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Any notes on this observation.\nThis may include clarifying information."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 201,
								"name": "BaseObservation.notes"
							}
						},
						{
							"id": 214,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period over which this observation is measured."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 198,
								"name": "BaseObservation.period"
							}
						},
						{
							"id": 218,
							"name": "relatedImplementationMilestone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A link to the milestone in the implementation section of OCDS to which this forecast,\ntarget or actual observation relates."
							},
							"type": {
								"type": "reference",
								"id": 192,
								"name": "MilestoneReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 202,
								"name": "BaseObservation.relatedImplementationMilestone"
							}
						},
						{
							"id": 215,
							"name": "unit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Unit"
							},
							"type": {
								"type": "reference",
								"id": 71,
								"name": "Unit"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 199,
								"name": "BaseObservation.unit"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								216,
								213,
								212,
								217,
								214,
								218,
								215
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 196,
							"name": "BaseObservation"
						}
					]
				},
				{
					"id": 219,
					"name": "Observation",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An actual or target observation.\nObservations should include either a value (for financial metrics) or measure (for other metrics)."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 203,
								"name": "FinancialObservation"
							},
							{
								"type": "reference",
								"id": 211,
								"name": "NonFinancialObservation"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						227,
						196,
						203,
						241,
						221,
						192,
						211
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						219
					]
				}
			]
		},
		{
			"id": 246,
			"name": "Options",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/extensions/options/option-group.d.ts",
			"children": [
				{
					"id": 254,
					"name": "BaseOption",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 257,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Free-text description for this option"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 255,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this option."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 256,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Title for this option"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 258,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Value provided by this option"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								257,
								255,
								256,
								258
							]
						}
					]
				},
				{
					"id": 247,
					"name": "OptionGroup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An option group is a set of options that may be applied by Procuring Entity for specific property"
					},
					"children": [
						{
							"id": 249,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Free-text description for this group"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 248,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this group"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 250,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Options available for this 'optionGroup'"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 259,
									"name": "Option"
								}
							}
						},
						{
							"id": 251,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The scheme element that the group applies"
							},
							"type": {
								"type": "reference",
								"id": 252,
								"name": "OptionGroupRelatesTo"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								249,
								248,
								250,
								251
							]
						}
					]
				},
				{
					"id": 262,
					"name": "OptionToCombine",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Whether buyer reserves the right to combine options a 'Option to combine' is used to capture this information"
					},
					"children": [
						{
							"id": 263,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An identifier for this OptionToCombine"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 264,
							"name": "relatedOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A number of options related to this OptionToCombine"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "stringLiteral",
										"value": "id"
									},
									"objectType": {
										"type": "reference",
										"name": "Option"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								263,
								264
							]
						}
					]
				},
				{
					"id": 272,
					"name": "Observation",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MainObservation"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 273,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 274,
											"name": "optionDetails",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 266,
												"name": "OptionDetails"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												274
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 259,
					"name": "Option",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Available prescribed option for requirement/observation that can be set as a value for bid.requirementResponse/award."
					},
					"typeParameter": [
						{
							"id": 260,
							"name": "RelatesTo",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 252,
								"name": "OptionGroupRelatesTo"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 254,
								"name": "BaseOption"
							}
						]
					}
				},
				{
					"id": 266,
					"name": "OptionDetails",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Where options are applied 'Option Details' is used to capture this information"
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 267,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 268,
											"name": "optionGroups",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "A list of option groups for this element"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 247,
													"name": "OptionGroup"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												268
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 269,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 270,
											"name": "optionsToCombine",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Where buyer reserves the right to combine options a 'Option to combine' is used to capture this information"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 262,
													"name": "OptionToCombine"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												270
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 252,
					"name": "OptionGroupRelatesTo",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "placeOfPerformance"
							},
							{
								"type": "stringLiteral",
								"value": "contractPeriod"
							},
							{
								"type": "stringLiteral",
								"value": "minValue"
							},
							{
								"type": "stringLiteral",
								"value": "maxValue"
							},
							{
								"type": "stringLiteral",
								"value": "period"
							},
							{
								"type": "stringLiteral",
								"value": "value"
							},
							{
								"type": "stringLiteral",
								"value": "measure"
							},
							{
								"type": "stringLiteral",
								"value": "unit"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 396,
					"name": "Requirement",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MainRequirement"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 397,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 398,
											"name": "optionDetails",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 266,
												"name": "OptionDetails"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												398
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						254,
						247,
						262
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						272,
						259,
						266,
						252,
						396
					]
				}
			]
		},
		{
			"id": 14,
			"name": "Organization",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/organization/address.d.ts",
			"children": [
				{
					"id": 15,
					"name": "Address",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An address."
					},
					"children": [
						{
							"id": 20,
							"name": "countryName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The country name. For example, United States."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 17,
							"name": "locality",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The locality. For example, Mountain View."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 19,
							"name": "postalCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The postal code. For example, 94043."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 18,
							"name": "region",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The region. For example, CA."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 16,
							"name": "streetAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The street address. For example, 1600 Amphitheatre Pkwy."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								20,
								17,
								19,
								18,
								16
							]
						}
					]
				},
				{
					"id": 28,
					"name": "ContactPoint",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A person, contact point or department to contact in relation to this contracting process."
					},
					"children": [
						{
							"id": 30,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The e-mail address of the contact point/person."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32,
							"name": "faxNumber",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The fax number of the contact point/person. This should include the international dialing code."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the contact person, department, or contact point, for correspondence relating to this contracting process."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31,
							"name": "telephone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The telephone number of the contact point/person. This should include the international dialing code."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33,
							"name": "url",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A web address for the contact point/person."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								30,
								32,
								29,
								31,
								33
							]
						}
					]
				},
				{
					"id": 22,
					"name": "Identifier",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A unique identifier for a party (organization)."
					},
					"children": [
						{
							"id": 24,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The identifier of the organization in the selected scheme."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 25,
							"name": "legalName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The legally registered name of the organization."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 23,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Organization identifiers should be taken from an existing organization identifier list.\nThe scheme field is used to indicate the list or register from which the identifier is taken.\nThis value should be taken\nfrom the [Organization Identifier Scheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#organization-identifier-scheme) codelist."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 26,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A URI to identify the organization, such as those provided by\n[Open Corporates](http://www.opencorporates.com) or some other relevant URI provider.\nThis is not for listing the website of the organization:\nthat can be done through the URL field of the Organization contact point."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24,
								25,
								23,
								26
							]
						}
					]
				},
				{
					"id": 35,
					"name": "Organization",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A party (organization)"
					},
					"typeParameter": [
						{
							"id": 37,
							"name": "PartyDetails",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 36,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											}
										}
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 41,
							"name": "additionalIdentifiers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of additional / supplemental identifiers for the organization or participant,\nusing the [organization identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/).\nThis can be used to provide an internally used identifier for this organization\nin addition to the primary legal entity identifier."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 22,
									"name": "Identifier"
								}
							}
						},
						{
							"id": 42,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An address.\nThis may be the legally registered address of the organization, or may be a correspondence address\nfor this particular contracting process."
							},
							"type": {
								"type": "reference",
								"id": 15,
								"name": "Address"
							}
						},
						{
							"id": 43,
							"name": "contactPoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Contact details that can be used for this party."
							},
							"type": {
								"type": "reference",
								"id": 28,
								"name": "ContactPoint"
							}
						},
						{
							"id": 45,
							"name": "details",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Additional classification information about parties can be provided using partyDetail extensions\nthat define particular properties and classification schemes."
							},
							"type": {
								"type": "reference",
								"id": 37,
								"name": "PartyDetails"
							}
						},
						{
							"id": 39,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The ID used for cross-referencing to this party from other sections of the release.\nThis field may be built with the following structure {identifier.scheme}-{identifier.id}(-{department-identifier})."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The primary identifier for this organization or participant.\nIdentifiers that uniquely pick out a legal entity should be preferred.\nConsult the [organization identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/)\nfor the preferred scheme and identifier to use."
							},
							"type": {
								"type": "reference",
								"id": 22,
								"name": "Identifier"
							}
						},
						{
							"id": 38,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A common name for this organization or other participant in the contracting process.\nThe identifier object provides a space for the formal legal name, and so this may either repeat that value,\nor may provide the common name by which this organization or entity is known. This field may also include details\nof the department or sub-unit involved in this contracting process."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 44,
							"name": "roles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The party's role(s) in the contracting process,\nusing the open [partyRole](https://standard.open-contracting.org/1.1/en/schema/codelists/#party-role) codelist."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 46,
									"name": "Role"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								41,
								42,
								43,
								45,
								39,
								40,
								38,
								44
							]
						}
					]
				},
				{
					"id": 48,
					"name": "OrganizationReference",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The id and name of the party being referenced.\nUsed to cross-reference to the parties section"
					},
					"children": [
						{
							"id": 50,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id of the party being referenced. This must match the id of an entry in the parties section."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 49,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the party being referenced.\nThis must match the name of an entry in the parties section."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								50,
								49
							]
						}
					]
				},
				{
					"id": 46,
					"name": "Role",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "buyer"
							},
							{
								"type": "stringLiteral",
								"value": "procuringEntity"
							},
							{
								"type": "stringLiteral",
								"value": "supplier"
							},
							{
								"type": "stringLiteral",
								"value": "tenderer"
							},
							{
								"type": "stringLiteral",
								"value": "funder"
							},
							{
								"type": "stringLiteral",
								"value": "enquirer"
							},
							{
								"type": "stringLiteral",
								"value": "payer"
							},
							{
								"type": "stringLiteral",
								"value": "payee"
							},
							{
								"type": "stringLiteral",
								"value": "reviewBody"
							},
							{
								"type": "stringLiteral",
								"value": "interestedParty"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						15,
						28,
						22,
						35,
						48
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						46
					]
				}
			]
		},
		{
			"id": 3,
			"name": "Period",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/period.d.ts",
			"children": [
				{
					"id": 4,
					"name": "Period",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Key events during a contracting process may have a known start date, end date, duration,\nor maximum extent (the latest date the period can extend to).\nIn some cases, not all of these fields will have known or relevant values."
					},
					"children": [
						{
							"id": 8,
							"name": "durationInDays",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The maximum duration of this period in days.\nA user interface can collect or display this data in months or years as appropriate,\nand then convert it into days when storing this field.\nThis field can be used when exact dates are not known.\nIf a startDate and endDate are set, this field, if used, should be equal to the difference between startDate and endDate.\nOtherwise, if a startDate and maxExtentDate are set, this field, if used,\nshould be equal to the difference between startDate and maxExtentDate."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 6,
							"name": "endDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The end date for the period.\nWhen known, a precise end date must be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 7,
							"name": "maxExtentDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period cannot be extended beyond this date.\nThis field can be used to express the maximum available date for extension or renewal of this period."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 5,
							"name": "startDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The start date for the period.\nWhen known, a precise start date must be provided."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								8,
								6,
								7,
								5
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						4
					]
				}
			]
		},
		{
			"id": 115,
			"name": "Planning",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/planning/budget.d.ts",
			"children": [
				{
					"id": 116,
					"name": "Budget",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This section contains information about the budget line, and associated projects,\nthrough which this contracting process is funded.\nIt draws upon the data model of the [Fiscal Data Package](https://frictionlessdata.io/specs/fiscal-data-package/),\nand should be used to cross-reference to more detailed information held using a Budget Data Package, or,\nwhere no linked Budget Data Package is available, to provide enough information to allow a user to manually\nor automatically cross-reference with another published source of budget and project information."
					},
					"children": [
						{
							"id": 119,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The value reserved in the budget for this contracting process.\nA negative value indicates anticipated income to the budget as a result of this contracting process, rather than expenditure.\nWhere the budget is drawn from multiple sources, the budget breakdown extension can be used."
							},
							"type": {
								"type": "reference",
								"id": 10,
								"name": "Value"
							}
						},
						{
							"id": 118,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A short free text description of the budget source.\nMay be used to provide the title of the budget line, or the programme used to fund this project."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 117,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An identifier for the budget line item which provides funds for this contracting process.\nThis identifier should be possible to cross-reference against the provided data source."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 120,
							"name": "project",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The name of the project through which this contracting process is funded (if applicable).\nSome organizations maintain a registry of projects, and the data should use the name\nby which the project is known in that registry.\nNo translation option is offered for this string, as translated values can be provided in third-party data,\nlinked from the data source above."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 121,
							"name": "projectID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An external identifier for the project that this contracting process forms part of, or is funded via (if applicable).\nSome organizations maintain a registry of projects, and the data should use the identifier from the relevant registry of projects."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 122,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A URI pointing directly to a machine-readable record about the budget line-item or line-items that fund this contracting process.\nInformation can be provided in a range of formats, including using IATI, the Open Fiscal Data Standard\nor any other standard which provides structured data on budget sources.\nHuman readable documents can be included using the planning.documents block."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								118,
								117,
								120,
								121,
								122
							]
						}
					]
				},
				{
					"id": 124,
					"name": "Milestone",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The milestone block can be used to represent a wide variety of events in the lifetime of a contracting process.\""
					},
					"children": [
						{
							"id": 129,
							"name": "code",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Milestone codes can be used to track specific events that take place for a particular kind of contracting process.\nFor example, a code of 'approvalLetter' can be used to allow applications to understand this milestone\nrepresents the date an approvalLetter is due or signed."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 131,
							"name": "dateMet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date on which the milestone was met."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 132,
							"name": "dateModified",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date the milestone was last reviewed or modified and the status was altered or confirmed to still be correct."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 128,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of the milestone."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 130,
							"name": "dueDate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date the milestone is due."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 125,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this milestone, unique within this block.\nThis field is used to keep track of multiple revisions of a milestone through the compilation from release to record mechanism."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 133,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The status that was realized on the date provided in `dateModified`,\nfrom the closed [milestoneStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#milestone-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 135,
								"name": "MilestoneStatus"
							}
						},
						{
							"id": 126,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Milestone title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 127,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The nature of the milestone,\nusing the open [milestoneType](https://standard.open-contracting.org/1.1/en/schema/codelists/#milestone-type) codelist."
							},
							"type": {
								"type": "reference",
								"id": 134,
								"name": "MilestoneType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								129,
								131,
								132,
								128,
								130,
								125,
								133,
								126,
								127
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 457,
							"name": "Milestone"
						}
					]
				},
				{
					"id": 135,
					"name": "MilestoneStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "scheduled"
							},
							{
								"type": "stringLiteral",
								"value": "met"
							},
							{
								"type": "stringLiteral",
								"value": "notMet"
							},
							{
								"type": "stringLiteral",
								"value": "partiallyMet"
							}
						]
					}
				},
				{
					"id": 134,
					"name": "MilestoneType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "preProcurement"
							},
							{
								"type": "stringLiteral",
								"value": "approval"
							},
							{
								"type": "stringLiteral",
								"value": "engagement"
							},
							{
								"type": "stringLiteral",
								"value": "assessment"
							},
							{
								"type": "stringLiteral",
								"value": "delivery"
							},
							{
								"type": "stringLiteral",
								"value": "reporting"
							},
							{
								"type": "stringLiteral",
								"value": "financing"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						116,
						124
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						135,
						134
					]
				}
			]
		},
		{
			"id": 152,
			"name": "RelatedProcess",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/related-process.d.ts",
			"children": [
				{
					"id": 153,
					"name": "RelatedProcess",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A reference to a related contracting process: generally one preceding or following on from the current process."
					},
					"children": [
						{
							"id": 154,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A local identifier for this relationship, unique within this array."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 158,
							"name": "identifier",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The identifier of the related process.\nIf the scheme is 'ocid', this must be an Open Contracting ID (ocid)."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 155,
							"name": "relationship",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The type of relationship,\nusing the open [relatedProcess](https://standard.open-contracting.org/1.1/en/schema/codelists/#related-process) codelist."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 160,
									"name": "Relationship"
								}
							}
						},
						{
							"id": 157,
							"name": "scheme",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identification scheme used by this cross-reference,\nusing the open [relatedProcessScheme](https://standard.open-contracting.org/1.1/en/schema/codelists/#related-process-scheme) codelist."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "ocid"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 156,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of the related process, where referencing an open contracting process,\nthis field should match the tender/title field in the related process."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 159,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A URI pointing to a machine-readable document, release or record package containing the identified related process."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								154,
								158,
								155,
								157,
								156,
								159
							]
						}
					]
				},
				{
					"id": 160,
					"name": "Relationship",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "framework"
							},
							{
								"type": "stringLiteral",
								"value": "planning"
							},
							{
								"type": "stringLiteral",
								"value": "parent"
							},
							{
								"type": "stringLiteral",
								"value": "prior"
							},
							{
								"type": "stringLiteral",
								"value": "unsuccessfulProcess"
							},
							{
								"type": "stringLiteral",
								"value": "subContract"
							},
							{
								"type": "stringLiteral",
								"value": "replacementProcess"
							},
							{
								"type": "stringLiteral",
								"value": "renewalProcess"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						153
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						160
					]
				}
			]
		},
		{
			"id": 1,
			"name": "Release",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/release.d.ts",
			"children": [
				{
					"id": 2,
					"name": "ReleaseTag",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "One or more values from the closed [releaseTag](https://standard.open-contracting.org/1.1/en/schema/codelists/#release-tag)\ncodelist. Tags can be used to filter releases and to understand the kind of information that releases might contain."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "planning"
							},
							{
								"type": "stringLiteral",
								"value": "planningUpdate"
							},
							{
								"type": "stringLiteral",
								"value": "tender"
							},
							{
								"type": "stringLiteral",
								"value": "tenderAmendment"
							},
							{
								"type": "stringLiteral",
								"value": "tenderUpdate"
							},
							{
								"type": "stringLiteral",
								"value": "tenderCancellation"
							},
							{
								"type": "stringLiteral",
								"value": "award"
							},
							{
								"type": "stringLiteral",
								"value": "awardUpdate"
							},
							{
								"type": "stringLiteral",
								"value": "awardCancellation"
							},
							{
								"type": "stringLiteral",
								"value": "contract"
							},
							{
								"type": "stringLiteral",
								"value": "contractUpdate"
							},
							{
								"type": "stringLiteral",
								"value": "contractAmendment"
							},
							{
								"type": "stringLiteral",
								"value": "implementation"
							},
							{
								"type": "stringLiteral",
								"value": "implementationUpdate"
							},
							{
								"type": "stringLiteral",
								"value": "contractTermination"
							},
							{
								"type": "stringLiteral",
								"value": "compiled"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2
					]
				}
			]
		},
		{
			"id": 275,
			"name": "Requirements",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/extensions/requirements/requirement/data-type.d.ts",
			"children": [
				{
					"id": 353,
					"name": "Award",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 365,
							"name": "amendments",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An award amendment is a formal change to the details of the award,\nand generally involves the publication of a new award notice/release.\nThe rationale and a description of the changes made can be provided here."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 94,
									"name": "Amendment"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 113,
								"name": "Award.amendments"
							}
						},
						{
							"id": 363,
							"name": "contractPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The period for which the contract has been awarded."
							},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 111,
								"name": "Award.contractPeriod"
							}
						},
						{
							"id": 359,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of the contract award.\nThis is usually the date on which a decision to award was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Award.date"
							}
						},
						{
							"id": 357,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award description"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 105,
								"name": "Award.description"
							}
						},
						{
							"id": 364,
							"name": "documents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "All documents and attachments related to the award, including any notices."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 52,
									"name": "Document"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "Award.documents"
							}
						},
						{
							"id": 355,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this award.\nIt must be unique and must not change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](https://standard.open-contracting.org/1.1/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "Award.id"
							}
						},
						{
							"id": 362,
							"name": "items",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The goods and services awarded in this award, broken into line items wherever possible.\nItems should not be duplicated, but the quantity specified instead."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 79,
									"name": "Item"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 110,
								"name": "Award.items"
							}
						},
						{
							"id": 354,
							"name": "requirementResponses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of the detailed responses of this award to the requirements of the tender."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 350,
									"name": "RequirementResponse"
								}
							}
						},
						{
							"id": 358,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The current status of the award,\nfrom the closed [awardStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-status) codelist."
							},
							"type": {
								"type": "reference",
								"id": 114,
								"name": "AwardStatus"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 106,
								"name": "Award.status"
							}
						},
						{
							"id": 361,
							"name": "suppliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The suppliers awarded this award.\nIf different suppliers have been awarded different items or values, these should be split into separate award blocks."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 48,
									"name": "OrganizationReference"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 109,
								"name": "Award.suppliers"
							}
						},
						{
							"id": 356,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Award title"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 104,
								"name": "Award.title"
							}
						},
						{
							"id": 360,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The total value of this award.\nIn the case of a framework contract this may be the total estimated lifetime value, or maximum value, of the agreement.\nThere may be more than one award per procurement. A negative value indicates that the award may involve payments\nfrom the supplier to the buyer (commonly used in concession contracts)."
							},
							"type": {
								"type": "reference",
								"id": 9,
								"name": "Value"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 108,
								"name": "Award.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								365,
								363,
								359,
								357,
								364,
								355,
								362,
								354,
								358,
								361,
								356,
								360
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 102,
							"name": "Award"
						}
					]
				},
				{
					"id": 372,
					"name": "BaseCriterion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 375,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this criterion.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 373,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this criterion.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 377,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The schema element that the criterion judges, evaluates or assesses.\nFor example criterion may be defined against items or against bidders."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "tenderer"
									},
									{
										"type": "stringLiteral",
										"value": "item"
									}
								]
							}
						},
						{
							"id": 378,
							"name": "requirementGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of requirement groups for this Criterion.\nA criterion is satisfied by one or more requirement groups being met.\nA requirement group is met when all requirements in the group are satisfied."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 367,
									"name": "RequirementGroup"
								}
							}
						},
						{
							"id": 376,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Source of response to the requirements specified in the criterion,\nfor example responses may be submitted by tenderers or by an assessment committee at the procuringEntity."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "tenderer"
									},
									{
										"type": "stringLiteral",
										"value": "buyer"
									},
									{
										"type": "stringLiteral",
										"value": "procuringEntity"
									}
								]
							}
						},
						{
							"id": 374,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this criterion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								375,
								373,
								377,
								378,
								376,
								374
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 379,
							"name": "TendererCriterion"
						},
						{
							"type": "reference",
							"id": 386,
							"name": "ItemCriterion"
						}
					]
				},
				{
					"id": 278,
					"name": "BaseRequirement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 282,
							"name": "dataType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The data type in which the requirement response must be provided."
							},
							"type": {
								"type": "reference",
								"id": 276,
								"name": "DataType"
							}
						},
						{
							"id": 281,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A free text description for this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 283,
							"name": "expectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to state the requirement when the response must be particular value."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 279,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 284,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A regular expression against which validate the requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 285,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to specify a particular period the requirement applies to, for example the bidder's turnover in a given year."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							}
						},
						{
							"id": 280,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								282,
								281,
								283,
								279,
								284,
								285,
								280
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 286,
							"name": "StringRequirement"
						},
						{
							"type": "reference",
							"id": 294,
							"name": "BooleanRequirement"
						},
						{
							"type": "reference",
							"id": 302,
							"name": "NumberRequirement"
						}
					]
				},
				{
					"id": 318,
					"name": "BaseRequirementResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 321,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this requirement response.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 319,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement response.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 323,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period which the requirement response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							}
						},
						{
							"id": 325,
							"name": "relatedTenderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where this requirement response relates to a tenderer and is provided by the buyer or procuring entity\nthis field should be used to reference the entry in the parties section for the tenderer the response relates to."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							}
						},
						{
							"id": 324,
							"name": "requirement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id and title of the requirement which the response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 314,
								"name": "RequirementReference"
							}
						},
						{
							"id": 320,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 322,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The value of this requirement response. The value must be of the type defined in the requirement.dataType field."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								321,
								319,
								323,
								325,
								324,
								320,
								322
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 326,
							"name": "StringRequirementResponse"
						},
						{
							"type": "reference",
							"id": 334,
							"name": "NumberRequirementResponse"
						},
						{
							"type": "reference",
							"id": 342,
							"name": "BooleanRequirementResponse"
						}
					]
				},
				{
					"id": 294,
					"name": "BooleanRequirement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 295,
							"name": "dataType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "stringLiteral",
										"value": "boolean"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 282,
								"name": "BaseRequirement.dataType"
							}
						},
						{
							"id": 299,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A free text description for this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 281,
								"name": "BaseRequirement.description"
							}
						},
						{
							"id": 296,
							"name": "expectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 283,
								"name": "BaseRequirement.expectedValue"
							}
						},
						{
							"id": 297,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 279,
								"name": "BaseRequirement.id"
							}
						},
						{
							"id": 300,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A regular expression against which validate the requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 284,
								"name": "BaseRequirement.pattern"
							}
						},
						{
							"id": 301,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to specify a particular period the requirement applies to, for example the bidder's turnover in a given year."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "BaseRequirement.period"
							}
						},
						{
							"id": 298,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 280,
								"name": "BaseRequirement.title"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								295,
								299,
								296,
								297,
								300,
								301,
								298
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 278,
							"name": "BaseRequirement"
						}
					]
				},
				{
					"id": 342,
					"name": "BooleanRequirementResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 346,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this requirement response.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 321,
								"name": "BaseRequirementResponse.description"
							}
						},
						{
							"id": 344,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement response.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 319,
								"name": "BaseRequirementResponse.id"
							}
						},
						{
							"id": 347,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period which the requirement response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 323,
								"name": "BaseRequirementResponse.period"
							}
						},
						{
							"id": 349,
							"name": "relatedTenderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where this requirement response relates to a tenderer and is provided by the buyer or procuring entity\nthis field should be used to reference the entry in the parties section for the tenderer the response relates to."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 325,
								"name": "BaseRequirementResponse.relatedTenderer"
							}
						},
						{
							"id": 348,
							"name": "requirement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id and title of the requirement which the response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 314,
								"name": "RequirementReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 324,
								"name": "BaseRequirementResponse.requirement"
							}
						},
						{
							"id": 345,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 320,
								"name": "BaseRequirementResponse.title"
							}
						},
						{
							"id": 343,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 322,
								"name": "BaseRequirementResponse.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								346,
								344,
								347,
								349,
								348,
								345,
								343
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 318,
							"name": "BaseRequirementResponse"
						}
					]
				},
				{
					"id": 386,
					"name": "ItemCriterion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 391,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this criterion.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 375,
								"name": "BaseCriterion.description"
							}
						},
						{
							"id": 389,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this criterion.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 373,
								"name": "BaseCriterion.id"
							}
						},
						{
							"id": 388,
							"name": "relatedItem",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Where relatesTo = \\\"item\\\" this field must be populated with the id of the item in this tender section\nwhich the criterion relates to. Where relatesTo <> \\\"item\\\" this field should be omitted."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 387,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "stringLiteral",
								"value": "item"
							},
							"overwrites": {
								"type": "reference",
								"id": 377,
								"name": "BaseCriterion.relatesTo"
							}
						},
						{
							"id": 393,
							"name": "requirementGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of requirement groups for this Criterion.\nA criterion is satisfied by one or more requirement groups being met.\nA requirement group is met when all requirements in the group are satisfied."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 367,
									"name": "RequirementGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 378,
								"name": "BaseCriterion.requirementGroups"
							}
						},
						{
							"id": 392,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Source of response to the requirements specified in the criterion,\nfor example responses may be submitted by tenderers or by an assessment committee at the procuringEntity."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "tenderer"
									},
									{
										"type": "stringLiteral",
										"value": "buyer"
									},
									{
										"type": "stringLiteral",
										"value": "procuringEntity"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "BaseCriterion.source"
							}
						},
						{
							"id": 390,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this criterion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "BaseCriterion.title"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								391,
								389,
								388,
								387,
								393,
								392,
								390
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 372,
							"name": "BaseCriterion"
						}
					]
				},
				{
					"id": 302,
					"name": "NumberRequirement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 303,
							"name": "dataType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "number"
									},
									{
										"type": "stringLiteral",
										"value": "integer"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 282,
								"name": "BaseRequirement.dataType"
							}
						},
						{
							"id": 309,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A free text description for this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 281,
								"name": "BaseRequirement.description"
							}
						},
						{
							"id": 304,
							"name": "expectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 283,
								"name": "BaseRequirement.expectedValue"
							}
						},
						{
							"id": 307,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 279,
								"name": "BaseRequirement.id"
							}
						},
						{
							"id": 306,
							"name": "maxValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to state the upper bound of the requirement when the response must be within a certain range."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 305,
							"name": "minValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to state the lower bound of the requirement when the response must be within a certain range."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 310,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A regular expression against which validate the requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 284,
								"name": "BaseRequirement.pattern"
							}
						},
						{
							"id": 311,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to specify a particular period the requirement applies to, for example the bidder's turnover in a given year."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "BaseRequirement.period"
							}
						},
						{
							"id": 308,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 280,
								"name": "BaseRequirement.title"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								303,
								309,
								304,
								307,
								306,
								305,
								310,
								311,
								308
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 278,
							"name": "BaseRequirement"
						}
					]
				},
				{
					"id": 334,
					"name": "NumberRequirementResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 338,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this requirement response.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 321,
								"name": "BaseRequirementResponse.description"
							}
						},
						{
							"id": 336,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement response.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 319,
								"name": "BaseRequirementResponse.id"
							}
						},
						{
							"id": 339,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period which the requirement response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 323,
								"name": "BaseRequirementResponse.period"
							}
						},
						{
							"id": 341,
							"name": "relatedTenderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where this requirement response relates to a tenderer and is provided by the buyer or procuring entity\nthis field should be used to reference the entry in the parties section for the tenderer the response relates to."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 325,
								"name": "BaseRequirementResponse.relatedTenderer"
							}
						},
						{
							"id": 340,
							"name": "requirement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id and title of the requirement which the response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 314,
								"name": "RequirementReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 324,
								"name": "BaseRequirementResponse.requirement"
							}
						},
						{
							"id": 337,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 320,
								"name": "BaseRequirementResponse.title"
							}
						},
						{
							"id": 335,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 322,
								"name": "BaseRequirementResponse.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								338,
								336,
								339,
								341,
								340,
								337,
								335
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 318,
							"name": "BaseRequirementResponse"
						}
					]
				},
				{
					"id": 367,
					"name": "RequirementGroup",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A requirement group is a set of requirements that must be fulfilled together to validate a criterion."
					},
					"children": [
						{
							"id": 369,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this requirement group. Structured information should be provided in the requirements array."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 368,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement group.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 370,
							"name": "requirements",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list requirements which must all be satisfied for the requirement group to be met."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 312,
									"name": "Requirement"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								369,
								368,
								370
							]
						}
					]
				},
				{
					"id": 314,
					"name": "RequirementReference",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Used to cross reference a requirement."
					},
					"children": [
						{
							"id": 315,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id of the requirement which the response is applicable to."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 316,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of the requirement which the response is applicable to."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								315,
								316
							]
						}
					]
				},
				{
					"id": 286,
					"name": "StringRequirement",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 287,
							"name": "dataType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "stringLiteral",
										"value": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 282,
								"name": "BaseRequirement.dataType"
							}
						},
						{
							"id": 291,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A free text description for this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 281,
								"name": "BaseRequirement.description"
							}
						},
						{
							"id": 288,
							"name": "expectedValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 283,
								"name": "BaseRequirement.expectedValue"
							}
						},
						{
							"id": 289,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 279,
								"name": "BaseRequirement.id"
							}
						},
						{
							"id": 292,
							"name": "pattern",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A regular expression against which validate the requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 284,
								"name": "BaseRequirement.pattern"
							}
						},
						{
							"id": 293,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Used to specify a particular period the requirement applies to, for example the bidder's turnover in a given year."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 285,
								"name": "BaseRequirement.period"
							}
						},
						{
							"id": 290,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The title of this atomic requirement."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 280,
								"name": "BaseRequirement.title"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								287,
								291,
								288,
								289,
								292,
								293,
								290
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 278,
							"name": "BaseRequirement"
						}
					]
				},
				{
					"id": 326,
					"name": "StringRequirementResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 330,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this requirement response.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 321,
								"name": "BaseRequirementResponse.description"
							}
						},
						{
							"id": 328,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this requirement response.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 319,
								"name": "BaseRequirementResponse.id"
							}
						},
						{
							"id": 331,
							"name": "period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The period which the requirement response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 3,
								"name": "Period"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 323,
								"name": "BaseRequirementResponse.period"
							}
						},
						{
							"id": 333,
							"name": "relatedTenderer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Where this requirement response relates to a tenderer and is provided by the buyer or procuring entity\nthis field should be used to reference the entry in the parties section for the tenderer the response relates to."
							},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "OrganizationReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 325,
								"name": "BaseRequirementResponse.relatedTenderer"
							}
						},
						{
							"id": 332,
							"name": "requirement",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The id and title of the requirement which the response is applicable to."
							},
							"type": {
								"type": "reference",
								"id": 314,
								"name": "RequirementReference"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 324,
								"name": "BaseRequirementResponse.requirement"
							}
						},
						{
							"id": 329,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this requirement response."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 320,
								"name": "BaseRequirementResponse.title"
							}
						},
						{
							"id": 327,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"id": 322,
								"name": "BaseRequirementResponse.value"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								330,
								328,
								331,
								333,
								332,
								329,
								327
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 318,
							"name": "BaseRequirementResponse"
						}
					]
				},
				{
					"id": 379,
					"name": "TendererCriterion",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 383,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A description of this criterion.\nStructured information should be provided in its other fields."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 375,
								"name": "BaseCriterion.description"
							}
						},
						{
							"id": 381,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The identifier for this criterion.\nIt must be unique and cannot change within the Open Contracting Process it is part of (defined by a single ocid).\nSee the [identifier guidance](http://standard.open-contracting.org/latest/en/schema/identifiers/) for further details."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 373,
								"name": "BaseCriterion.id"
							}
						},
						{
							"id": 380,
							"name": "relatesTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "stringLiteral",
								"value": "tenderer"
							},
							"overwrites": {
								"type": "reference",
								"id": 377,
								"name": "BaseCriterion.relatesTo"
							}
						},
						{
							"id": 385,
							"name": "requirementGroups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A list of requirement groups for this Criterion.\nA criterion is satisfied by one or more requirement groups being met.\nA requirement group is met when all requirements in the group are satisfied."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 367,
									"name": "RequirementGroup"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 378,
								"name": "BaseCriterion.requirementGroups"
							}
						},
						{
							"id": 384,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Source of response to the requirements specified in the criterion,\nfor example responses may be submitted by tenderers or by an assessment committee at the procuringEntity."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "tenderer"
									},
									{
										"type": "stringLiteral",
										"value": "buyer"
									},
									{
										"type": "stringLiteral",
										"value": "procuringEntity"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "BaseCriterion.source"
							}
						},
						{
							"id": 382,
							"name": "title",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A title for this criterion."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 374,
								"name": "BaseCriterion.title"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								383,
								381,
								380,
								385,
								384,
								382
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 372,
							"name": "BaseCriterion"
						}
					]
				},
				{
					"id": 394,
					"name": "Criterion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A criterion on which either bidders or items will be judged, evaluated or assessed."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 379,
								"name": "TendererCriterion"
							},
							{
								"type": "reference",
								"id": 386,
								"name": "ItemCriterion"
							}
						]
					}
				},
				{
					"id": 276,
					"name": "DataType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "string"
							},
							{
								"type": "stringLiteral",
								"value": "number"
							},
							{
								"type": "stringLiteral",
								"value": "integer"
							},
							{
								"type": "stringLiteral",
								"value": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 312,
					"name": "Requirement",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An atomic requirement.\nRequirements can specify the expected value that the response has to contain,\nor a range of threshold values within which the response has to fit in.\nThe requirement may apply to a certain period of time."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 286,
								"name": "StringRequirement"
							},
							{
								"type": "reference",
								"id": 294,
								"name": "BooleanRequirement"
							},
							{
								"type": "reference",
								"id": 302,
								"name": "NumberRequirement"
							}
						]
					}
				},
				{
					"id": 350,
					"name": "RequirementResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An assertion that responds to a single requirement.\nA requirement response provides the value for the requirement and may provide the period to which it applies."
					},
					"typeParameter": [
						{
							"id": 351,
							"name": "DT",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 276,
								"name": "DataType"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "typeParameter",
							"name": "DT",
							"constraint": {
								"type": "reference",
								"id": 276,
								"name": "DataType"
							}
						},
						"extendsType": {
							"type": "stringLiteral",
							"value": "string"
						},
						"trueType": {
							"type": "reference",
							"name": "StringRequirementResponse"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "typeParameter",
								"name": "DT",
								"constraint": {
									"type": "reference",
									"id": 276,
									"name": "DataType"
								}
							},
							"extendsType": {
								"type": "stringLiteral",
								"value": "boolean"
							},
							"trueType": {
								"type": "reference",
								"name": "BooleanRequirementResponse"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "typeParameter",
									"name": "DT",
									"constraint": {
										"type": "reference",
										"id": 276,
										"name": "DataType"
									}
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "undefined"
								},
								"trueType": {
									"type": "reference",
									"name": "BaseRequirementResponse"
								},
								"falseType": {
									"type": "reference",
									"name": "NumberRequirementResponse"
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						353,
						372,
						278,
						318,
						294,
						342,
						386,
						302,
						334,
						367,
						314,
						286,
						326,
						379
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						394,
						276,
						312,
						350
					]
				}
			]
		},
		{
			"id": 86,
			"name": "Tender",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/tender/tender.d.ts",
			"children": [
				{
					"id": 94,
					"name": "Amendment",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Amendment information"
					},
					"children": [
						{
							"id": 99,
							"name": "amendsReleaseID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Provide the identifier (release.id) of the OCDS release (from this contracting process)\nthat provides the values for this contracting process **before** the amendment was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 95,
							"name": "date",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The date of this amendment."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 98,
							"name": "description",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "A free text, or semi-structured, description of the changes made in this amendment."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 97,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An identifier for this amendment: often the amendment number"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 96,
							"name": "rationale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "An explanation for the amendment."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 100,
							"name": "releaseID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Provide the identifier (release.id) of the OCDS release (from this contracting process)\nthat provides the values for this contracting process **after** the amendment was made."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								99,
								95,
								98,
								97,
								96,
								100
							]
						}
					]
				},
				{
					"id": 90,
					"name": "AdditionalProcurementCategory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Any additional categories describing the objects of this contracting process,\nusing the open [extendedProcurementCategory](https://standard.open-contracting.org/1.1/en/schema/codelists/#extended-procurement-category) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "never"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 91,
					"name": "AwardCriteria",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The award criteria for the procurement,\nusing the open [awardCriteria](https://standard.open-contracting.org/1.1/en/schema/codelists/#award-criteria) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "priceOnly"
							},
							{
								"type": "stringLiteral",
								"value": "costOnly"
							},
							{
								"type": "stringLiteral",
								"value": "qualityOnly"
							},
							{
								"type": "stringLiteral",
								"value": "ratedCriteria"
							},
							{
								"type": "stringLiteral",
								"value": "lowestCost"
							},
							{
								"type": "stringLiteral",
								"value": "bestProposal"
							},
							{
								"type": "stringLiteral",
								"value": "bestValueToGovernment"
							},
							{
								"type": "stringLiteral",
								"value": "singleBidOnly"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 89,
					"name": "MainProcurementCategory",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The primary category describing the main object of this contracting process,\nfrom the closed [procurementCategory](https://standard.open-contracting.org/1.1/en/schema/codelists/#procurement-category) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "goods"
							},
							{
								"type": "stringLiteral",
								"value": "works"
							},
							{
								"type": "stringLiteral",
								"value": "services"
							}
						]
					}
				},
				{
					"id": 88,
					"name": "ProcurementMethod",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The procurement method,\nfrom the closed [method](https://standard.open-contracting.org/1.1/en/schema/codelists/#method) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "open"
							},
							{
								"type": "stringLiteral",
								"value": "selective"
							},
							{
								"type": "stringLiteral",
								"value": "limited"
							},
							{
								"type": "stringLiteral",
								"value": "direct"
							}
						]
					}
				},
				{
					"id": 92,
					"name": "SubmissionMethod",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The methods by which bids are submitted,\nusing the open [submissionMethod](https://standard.open-contracting.org/1.1/en/schema/codelists/#submission-method) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "electronicSubmission"
							},
							{
								"type": "stringLiteral",
								"value": "electronicAuction"
							},
							{
								"type": "stringLiteral",
								"value": "written"
							},
							{
								"type": "stringLiteral",
								"value": "inPerson"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 87,
					"name": "TenderStatus",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current status of the tender,\nfrom the closed [tenderStatus](https://standard.open-contracting.org/1.1/en/schema/codelists/#tender-status) codelist."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "planning"
							},
							{
								"type": "stringLiteral",
								"value": "planned"
							},
							{
								"type": "stringLiteral",
								"value": "active"
							},
							{
								"type": "stringLiteral",
								"value": "cancelled"
							},
							{
								"type": "stringLiteral",
								"value": "unsuccessful"
							},
							{
								"type": "stringLiteral",
								"value": "complete"
							},
							{
								"type": "stringLiteral",
								"value": "withdrawn"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						94
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						90,
						91,
						89,
						88,
						92,
						87
					]
				}
			]
		},
		{
			"id": 9,
			"name": "Value",
			"kind": 1,
			"kindString": "Module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/dmytrocat/Projects/ts4ocds/standard/definitions/value.d.ts",
			"children": [
				{
					"id": 10,
					"name": "Value",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Financial values should be published with a currency attached."
					},
					"children": [
						{
							"id": 11,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Amount as a number."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 12,
							"name": "currency",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The currency of the amount,\nfrom the closed [currency](https://standard.open-contracting.org/1.1/en/schema/codelists/#currency) codelist."
							},
							"type": {
								"type": "reference",
								"id": 13,
								"name": "Currency"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								11,
								12
							]
						}
					]
				},
				{
					"id": 13,
					"name": "Currency",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "ADP"
							},
							{
								"type": "stringLiteral",
								"value": "AED"
							},
							{
								"type": "stringLiteral",
								"value": "AFA"
							},
							{
								"type": "stringLiteral",
								"value": "AFN"
							},
							{
								"type": "stringLiteral",
								"value": "ALK"
							},
							{
								"type": "stringLiteral",
								"value": "ALL"
							},
							{
								"type": "stringLiteral",
								"value": "AMD"
							},
							{
								"type": "stringLiteral",
								"value": "ANG"
							},
							{
								"type": "stringLiteral",
								"value": "AOA"
							},
							{
								"type": "stringLiteral",
								"value": "AOK"
							},
							{
								"type": "stringLiteral",
								"value": "AON"
							},
							{
								"type": "stringLiteral",
								"value": "AOR"
							},
							{
								"type": "stringLiteral",
								"value": "ARA"
							},
							{
								"type": "stringLiteral",
								"value": "ARP"
							},
							{
								"type": "stringLiteral",
								"value": "ARS"
							},
							{
								"type": "stringLiteral",
								"value": "ARY"
							},
							{
								"type": "stringLiteral",
								"value": "ATS"
							},
							{
								"type": "stringLiteral",
								"value": "AUD"
							},
							{
								"type": "stringLiteral",
								"value": "AWG"
							},
							{
								"type": "stringLiteral",
								"value": "AYM"
							},
							{
								"type": "stringLiteral",
								"value": "AZM"
							},
							{
								"type": "stringLiteral",
								"value": "AZN"
							},
							{
								"type": "stringLiteral",
								"value": "BAD"
							},
							{
								"type": "stringLiteral",
								"value": "BAM"
							},
							{
								"type": "stringLiteral",
								"value": "BBD"
							},
							{
								"type": "stringLiteral",
								"value": "BDT"
							},
							{
								"type": "stringLiteral",
								"value": "BEC"
							},
							{
								"type": "stringLiteral",
								"value": "BEF"
							},
							{
								"type": "stringLiteral",
								"value": "BEL"
							},
							{
								"type": "stringLiteral",
								"value": "BGJ"
							},
							{
								"type": "stringLiteral",
								"value": "BGK"
							},
							{
								"type": "stringLiteral",
								"value": "BGL"
							},
							{
								"type": "stringLiteral",
								"value": "BGN"
							},
							{
								"type": "stringLiteral",
								"value": "BHD"
							},
							{
								"type": "stringLiteral",
								"value": "BIF"
							},
							{
								"type": "stringLiteral",
								"value": "BMD"
							},
							{
								"type": "stringLiteral",
								"value": "BND"
							},
							{
								"type": "stringLiteral",
								"value": "BOB"
							},
							{
								"type": "stringLiteral",
								"value": "BOP"
							},
							{
								"type": "stringLiteral",
								"value": "BOV"
							},
							{
								"type": "stringLiteral",
								"value": "BRB"
							},
							{
								"type": "stringLiteral",
								"value": "BRC"
							},
							{
								"type": "stringLiteral",
								"value": "BRE"
							},
							{
								"type": "stringLiteral",
								"value": "BRL"
							},
							{
								"type": "stringLiteral",
								"value": "BRN"
							},
							{
								"type": "stringLiteral",
								"value": "BRR"
							},
							{
								"type": "stringLiteral",
								"value": "BSD"
							},
							{
								"type": "stringLiteral",
								"value": "BTN"
							},
							{
								"type": "stringLiteral",
								"value": "BUK"
							},
							{
								"type": "stringLiteral",
								"value": "BWP"
							},
							{
								"type": "stringLiteral",
								"value": "BYB"
							},
							{
								"type": "stringLiteral",
								"value": "BYN"
							},
							{
								"type": "stringLiteral",
								"value": "BYR"
							},
							{
								"type": "stringLiteral",
								"value": "BZD"
							},
							{
								"type": "stringLiteral",
								"value": "CAD"
							},
							{
								"type": "stringLiteral",
								"value": "CDF"
							},
							{
								"type": "stringLiteral",
								"value": "CHC"
							},
							{
								"type": "stringLiteral",
								"value": "CHE"
							},
							{
								"type": "stringLiteral",
								"value": "CHF"
							},
							{
								"type": "stringLiteral",
								"value": "CHW"
							},
							{
								"type": "stringLiteral",
								"value": "CLF"
							},
							{
								"type": "stringLiteral",
								"value": "CLP"
							},
							{
								"type": "stringLiteral",
								"value": "CNY"
							},
							{
								"type": "stringLiteral",
								"value": "COP"
							},
							{
								"type": "stringLiteral",
								"value": "COU"
							},
							{
								"type": "stringLiteral",
								"value": "CRC"
							},
							{
								"type": "stringLiteral",
								"value": "CSD"
							},
							{
								"type": "stringLiteral",
								"value": "CSJ"
							},
							{
								"type": "stringLiteral",
								"value": "CSK"
							},
							{
								"type": "stringLiteral",
								"value": "CUC"
							},
							{
								"type": "stringLiteral",
								"value": "CUP"
							},
							{
								"type": "stringLiteral",
								"value": "CVE"
							},
							{
								"type": "stringLiteral",
								"value": "CYP"
							},
							{
								"type": "stringLiteral",
								"value": "CZK"
							},
							{
								"type": "stringLiteral",
								"value": "DDM"
							},
							{
								"type": "stringLiteral",
								"value": "DEM"
							},
							{
								"type": "stringLiteral",
								"value": "DJF"
							},
							{
								"type": "stringLiteral",
								"value": "DKK"
							},
							{
								"type": "stringLiteral",
								"value": "DOP"
							},
							{
								"type": "stringLiteral",
								"value": "DZD"
							},
							{
								"type": "stringLiteral",
								"value": "ECS"
							},
							{
								"type": "stringLiteral",
								"value": "ECV"
							},
							{
								"type": "stringLiteral",
								"value": "EEK"
							},
							{
								"type": "stringLiteral",
								"value": "EGP"
							},
							{
								"type": "stringLiteral",
								"value": "ERN"
							},
							{
								"type": "stringLiteral",
								"value": "ESA"
							},
							{
								"type": "stringLiteral",
								"value": "ESB"
							},
							{
								"type": "stringLiteral",
								"value": "ESP"
							},
							{
								"type": "stringLiteral",
								"value": "ETB"
							},
							{
								"type": "stringLiteral",
								"value": "EUR"
							},
							{
								"type": "stringLiteral",
								"value": "FIM"
							},
							{
								"type": "stringLiteral",
								"value": "FJD"
							},
							{
								"type": "stringLiteral",
								"value": "FKP"
							},
							{
								"type": "stringLiteral",
								"value": "FRF"
							},
							{
								"type": "stringLiteral",
								"value": "GBP"
							},
							{
								"type": "stringLiteral",
								"value": "GEK"
							},
							{
								"type": "stringLiteral",
								"value": "GEL"
							},
							{
								"type": "stringLiteral",
								"value": "GHC"
							},
							{
								"type": "stringLiteral",
								"value": "GHP"
							},
							{
								"type": "stringLiteral",
								"value": "GHS"
							},
							{
								"type": "stringLiteral",
								"value": "GIP"
							},
							{
								"type": "stringLiteral",
								"value": "GMD"
							},
							{
								"type": "stringLiteral",
								"value": "GNE"
							},
							{
								"type": "stringLiteral",
								"value": "GNF"
							},
							{
								"type": "stringLiteral",
								"value": "GNS"
							},
							{
								"type": "stringLiteral",
								"value": "GQE"
							},
							{
								"type": "stringLiteral",
								"value": "GRD"
							},
							{
								"type": "stringLiteral",
								"value": "GTQ"
							},
							{
								"type": "stringLiteral",
								"value": "GWE"
							},
							{
								"type": "stringLiteral",
								"value": "GWP"
							},
							{
								"type": "stringLiteral",
								"value": "GYD"
							},
							{
								"type": "stringLiteral",
								"value": "HKD"
							},
							{
								"type": "stringLiteral",
								"value": "HNL"
							},
							{
								"type": "stringLiteral",
								"value": "HRD"
							},
							{
								"type": "stringLiteral",
								"value": "HRK"
							},
							{
								"type": "stringLiteral",
								"value": "HTG"
							},
							{
								"type": "stringLiteral",
								"value": "HUF"
							},
							{
								"type": "stringLiteral",
								"value": "IDR"
							},
							{
								"type": "stringLiteral",
								"value": "IEP"
							},
							{
								"type": "stringLiteral",
								"value": "ILP"
							},
							{
								"type": "stringLiteral",
								"value": "ILR"
							},
							{
								"type": "stringLiteral",
								"value": "ILS"
							},
							{
								"type": "stringLiteral",
								"value": "INR"
							},
							{
								"type": "stringLiteral",
								"value": "IQD"
							},
							{
								"type": "stringLiteral",
								"value": "IRR"
							},
							{
								"type": "stringLiteral",
								"value": "ISJ"
							},
							{
								"type": "stringLiteral",
								"value": "ISK"
							},
							{
								"type": "stringLiteral",
								"value": "ITL"
							},
							{
								"type": "stringLiteral",
								"value": "JMD"
							},
							{
								"type": "stringLiteral",
								"value": "JOD"
							},
							{
								"type": "stringLiteral",
								"value": "JPY"
							},
							{
								"type": "stringLiteral",
								"value": "KES"
							},
							{
								"type": "stringLiteral",
								"value": "KGS"
							},
							{
								"type": "stringLiteral",
								"value": "KHR"
							},
							{
								"type": "stringLiteral",
								"value": "KMF"
							},
							{
								"type": "stringLiteral",
								"value": "KPW"
							},
							{
								"type": "stringLiteral",
								"value": "KRW"
							},
							{
								"type": "stringLiteral",
								"value": "KWD"
							},
							{
								"type": "stringLiteral",
								"value": "KYD"
							},
							{
								"type": "stringLiteral",
								"value": "KZT"
							},
							{
								"type": "stringLiteral",
								"value": "LAJ"
							},
							{
								"type": "stringLiteral",
								"value": "LAK"
							},
							{
								"type": "stringLiteral",
								"value": "LBP"
							},
							{
								"type": "stringLiteral",
								"value": "LKR"
							},
							{
								"type": "stringLiteral",
								"value": "LRD"
							},
							{
								"type": "stringLiteral",
								"value": "LSL"
							},
							{
								"type": "stringLiteral",
								"value": "LSM"
							},
							{
								"type": "stringLiteral",
								"value": "LTL"
							},
							{
								"type": "stringLiteral",
								"value": "LTT"
							},
							{
								"type": "stringLiteral",
								"value": "LUC"
							},
							{
								"type": "stringLiteral",
								"value": "LUF"
							},
							{
								"type": "stringLiteral",
								"value": "LUL"
							},
							{
								"type": "stringLiteral",
								"value": "LVL"
							},
							{
								"type": "stringLiteral",
								"value": "LVR"
							},
							{
								"type": "stringLiteral",
								"value": "LYD"
							},
							{
								"type": "stringLiteral",
								"value": "MAD"
							},
							{
								"type": "stringLiteral",
								"value": "MDL"
							},
							{
								"type": "stringLiteral",
								"value": "MGA"
							},
							{
								"type": "stringLiteral",
								"value": "MGF"
							},
							{
								"type": "stringLiteral",
								"value": "MKD"
							},
							{
								"type": "stringLiteral",
								"value": "MLF"
							},
							{
								"type": "stringLiteral",
								"value": "MMK"
							},
							{
								"type": "stringLiteral",
								"value": "MNT"
							},
							{
								"type": "stringLiteral",
								"value": "MOP"
							},
							{
								"type": "stringLiteral",
								"value": "MRO"
							},
							{
								"type": "stringLiteral",
								"value": "MRU"
							},
							{
								"type": "stringLiteral",
								"value": "MTL"
							},
							{
								"type": "stringLiteral",
								"value": "MTP"
							},
							{
								"type": "stringLiteral",
								"value": "MUR"
							},
							{
								"type": "stringLiteral",
								"value": "MVQ"
							},
							{
								"type": "stringLiteral",
								"value": "MVR"
							},
							{
								"type": "stringLiteral",
								"value": "MWK"
							},
							{
								"type": "stringLiteral",
								"value": "MXN"
							},
							{
								"type": "stringLiteral",
								"value": "MXP"
							},
							{
								"type": "stringLiteral",
								"value": "MXV"
							},
							{
								"type": "stringLiteral",
								"value": "MYR"
							},
							{
								"type": "stringLiteral",
								"value": "MZE"
							},
							{
								"type": "stringLiteral",
								"value": "MZM"
							},
							{
								"type": "stringLiteral",
								"value": "MZN"
							},
							{
								"type": "stringLiteral",
								"value": "NAD"
							},
							{
								"type": "stringLiteral",
								"value": "NGN"
							},
							{
								"type": "stringLiteral",
								"value": "NIC"
							},
							{
								"type": "stringLiteral",
								"value": "NIO"
							},
							{
								"type": "stringLiteral",
								"value": "NLG"
							},
							{
								"type": "stringLiteral",
								"value": "NOK"
							},
							{
								"type": "stringLiteral",
								"value": "NPR"
							},
							{
								"type": "stringLiteral",
								"value": "NZD"
							},
							{
								"type": "stringLiteral",
								"value": "OMR"
							},
							{
								"type": "stringLiteral",
								"value": "PAB"
							},
							{
								"type": "stringLiteral",
								"value": "PEH"
							},
							{
								"type": "stringLiteral",
								"value": "PEI"
							},
							{
								"type": "stringLiteral",
								"value": "PEN"
							},
							{
								"type": "stringLiteral",
								"value": "PES"
							},
							{
								"type": "stringLiteral",
								"value": "PGK"
							},
							{
								"type": "stringLiteral",
								"value": "PHP"
							},
							{
								"type": "stringLiteral",
								"value": "PKR"
							},
							{
								"type": "stringLiteral",
								"value": "PLN"
							},
							{
								"type": "stringLiteral",
								"value": "PLZ"
							},
							{
								"type": "stringLiteral",
								"value": "PTE"
							},
							{
								"type": "stringLiteral",
								"value": "PYG"
							},
							{
								"type": "stringLiteral",
								"value": "QAR"
							},
							{
								"type": "stringLiteral",
								"value": "RHD"
							},
							{
								"type": "stringLiteral",
								"value": "ROK"
							},
							{
								"type": "stringLiteral",
								"value": "ROL"
							},
							{
								"type": "stringLiteral",
								"value": "RON"
							},
							{
								"type": "stringLiteral",
								"value": "RSD"
							},
							{
								"type": "stringLiteral",
								"value": "RUB"
							},
							{
								"type": "stringLiteral",
								"value": "RUR"
							},
							{
								"type": "stringLiteral",
								"value": "RWF"
							},
							{
								"type": "stringLiteral",
								"value": "SAR"
							},
							{
								"type": "stringLiteral",
								"value": "SBD"
							},
							{
								"type": "stringLiteral",
								"value": "SCR"
							},
							{
								"type": "stringLiteral",
								"value": "SDD"
							},
							{
								"type": "stringLiteral",
								"value": "SDG"
							},
							{
								"type": "stringLiteral",
								"value": "SDP"
							},
							{
								"type": "stringLiteral",
								"value": "SEK"
							},
							{
								"type": "stringLiteral",
								"value": "SGD"
							},
							{
								"type": "stringLiteral",
								"value": "SHP"
							},
							{
								"type": "stringLiteral",
								"value": "SIT"
							},
							{
								"type": "stringLiteral",
								"value": "SKK"
							},
							{
								"type": "stringLiteral",
								"value": "SLL"
							},
							{
								"type": "stringLiteral",
								"value": "SOS"
							},
							{
								"type": "stringLiteral",
								"value": "SRD"
							},
							{
								"type": "stringLiteral",
								"value": "SRG"
							},
							{
								"type": "stringLiteral",
								"value": "SSP"
							},
							{
								"type": "stringLiteral",
								"value": "STD"
							},
							{
								"type": "stringLiteral",
								"value": "STN"
							},
							{
								"type": "stringLiteral",
								"value": "SUR"
							},
							{
								"type": "stringLiteral",
								"value": "SVC"
							},
							{
								"type": "stringLiteral",
								"value": "SYP"
							},
							{
								"type": "stringLiteral",
								"value": "SZL"
							},
							{
								"type": "stringLiteral",
								"value": "THB"
							},
							{
								"type": "stringLiteral",
								"value": "TJR"
							},
							{
								"type": "stringLiteral",
								"value": "TJS"
							},
							{
								"type": "stringLiteral",
								"value": "TMM"
							},
							{
								"type": "stringLiteral",
								"value": "TMT"
							},
							{
								"type": "stringLiteral",
								"value": "TND"
							},
							{
								"type": "stringLiteral",
								"value": "TOP"
							},
							{
								"type": "stringLiteral",
								"value": "TPE"
							},
							{
								"type": "stringLiteral",
								"value": "TRL"
							},
							{
								"type": "stringLiteral",
								"value": "TRY"
							},
							{
								"type": "stringLiteral",
								"value": "TTD"
							},
							{
								"type": "stringLiteral",
								"value": "TWD"
							},
							{
								"type": "stringLiteral",
								"value": "TZS"
							},
							{
								"type": "stringLiteral",
								"value": "UAH"
							},
							{
								"type": "stringLiteral",
								"value": "UAK"
							},
							{
								"type": "stringLiteral",
								"value": "UGS"
							},
							{
								"type": "stringLiteral",
								"value": "UGW"
							},
							{
								"type": "stringLiteral",
								"value": "UGX"
							},
							{
								"type": "stringLiteral",
								"value": "USD"
							},
							{
								"type": "stringLiteral",
								"value": "USN"
							},
							{
								"type": "stringLiteral",
								"value": "USS"
							},
							{
								"type": "stringLiteral",
								"value": "UYI"
							},
							{
								"type": "stringLiteral",
								"value": "UYN"
							},
							{
								"type": "stringLiteral",
								"value": "UYP"
							},
							{
								"type": "stringLiteral",
								"value": "UYU"
							},
							{
								"type": "stringLiteral",
								"value": "UYW"
							},
							{
								"type": "stringLiteral",
								"value": "UZS"
							},
							{
								"type": "stringLiteral",
								"value": "VEB"
							},
							{
								"type": "stringLiteral",
								"value": "VEF"
							},
							{
								"type": "stringLiteral",
								"value": "VES"
							},
							{
								"type": "stringLiteral",
								"value": "VNC"
							},
							{
								"type": "stringLiteral",
								"value": "VND"
							},
							{
								"type": "stringLiteral",
								"value": "VUV"
							},
							{
								"type": "stringLiteral",
								"value": "WST"
							},
							{
								"type": "stringLiteral",
								"value": "XAF"
							},
							{
								"type": "stringLiteral",
								"value": "XAG"
							},
							{
								"type": "stringLiteral",
								"value": "XAU"
							},
							{
								"type": "stringLiteral",
								"value": "XBA"
							},
							{
								"type": "stringLiteral",
								"value": "XBB"
							},
							{
								"type": "stringLiteral",
								"value": "XBC"
							},
							{
								"type": "stringLiteral",
								"value": "XBD"
							},
							{
								"type": "stringLiteral",
								"value": "XCD"
							},
							{
								"type": "stringLiteral",
								"value": "XDR"
							},
							{
								"type": "stringLiteral",
								"value": "XEU"
							},
							{
								"type": "stringLiteral",
								"value": "XFO"
							},
							{
								"type": "stringLiteral",
								"value": "XFU"
							},
							{
								"type": "stringLiteral",
								"value": "XOF"
							},
							{
								"type": "stringLiteral",
								"value": "XPD"
							},
							{
								"type": "stringLiteral",
								"value": "XPF"
							},
							{
								"type": "stringLiteral",
								"value": "XPT"
							},
							{
								"type": "stringLiteral",
								"value": "XRE"
							},
							{
								"type": "stringLiteral",
								"value": "XSU"
							},
							{
								"type": "stringLiteral",
								"value": "XTS"
							},
							{
								"type": "stringLiteral",
								"value": "XUA"
							},
							{
								"type": "stringLiteral",
								"value": "XXX"
							},
							{
								"type": "stringLiteral",
								"value": "YDD"
							},
							{
								"type": "stringLiteral",
								"value": "YER"
							},
							{
								"type": "stringLiteral",
								"value": "YUD"
							},
							{
								"type": "stringLiteral",
								"value": "YUM"
							},
							{
								"type": "stringLiteral",
								"value": "YUN"
							},
							{
								"type": "stringLiteral",
								"value": "ZAL"
							},
							{
								"type": "stringLiteral",
								"value": "ZAR"
							},
							{
								"type": "stringLiteral",
								"value": "ZMK"
							},
							{
								"type": "stringLiteral",
								"value": "ZMW"
							},
							{
								"type": "stringLiteral",
								"value": "ZRN"
							},
							{
								"type": "stringLiteral",
								"value": "ZRZ"
							},
							{
								"type": "stringLiteral",
								"value": "ZWC"
							},
							{
								"type": "stringLiteral",
								"value": "ZWD"
							},
							{
								"type": "stringLiteral",
								"value": "ZWL"
							},
							{
								"type": "stringLiteral",
								"value": "ZWN"
							},
							{
								"type": "stringLiteral",
								"value": "ZWR"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						10
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						13
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				101,
				136,
				161,
				51,
				63,
				407,
				191,
				246,
				14,
				3,
				115,
				152,
				1,
				275,
				86,
				9
			]
		}
	]
}